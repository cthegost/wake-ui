{"version":3,"file":"components-Avatar-Avatar-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AAAA;AACA;;;;;;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://wake-ui/./src/components/Avatar/Avatar.css","webpack://wake-ui/./src/components/Avatar/Avatar.css?35c0","webpack://wake-ui/./src/components/Avatar/Avatar.stories.tsx","webpack://wake-ui/./src/components/Avatar/Avatar.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Базовый контейнер аватара */\n.avatar-container {\n  display: inline-flex; /* Чтобы занимал место по содержимому */\n  align-items: center;\n  justify-content: center;\n  vertical-align: middle;\n  overflow: hidden; /* Скрываем все, что выходит за границы */\n  user-select: none;\n  background-color: #e0e0e0; /* Фоновый цвет для инициалов и плейсхолдера */\n  color: #757575; /* Цвет текста/иконки по умолчанию */\n  font-weight: 500;\n  margin: 5px; /* Отступ для Storybook */\n}\n\n/* Стили для изображения */\n.avatar-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover; /* Масштабируем изображение, сохраняя пропорции */\n  display: block; /* Убираем лишний отступ снизу */\n}\n\n/* Стили для инициалов */\n.avatar-initials {\n  text-align: center;\n  line-height: 1; /* Для лучшего выравнивания */\n  color: #333; /* Делаем цвет текста темнее для лучшей читаемости на цветном фоне */\n}\n\n/* Стили для плейсхолдера (иконки) */\n.avatar-placeholder {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n}\n\n.avatar-placeholder svg {\n  display: block;\n  width: 60%;\n  height: 60%;\n  fill: currentColor;\n}\n\n/* Размеры */\n.avatar--small {\n  width: 24px;\n  height: 24px;\n  font-size: 0.75rem; /* 12px */\n}\n.avatar--medium {\n  width: 40px;\n  height: 40px;\n  font-size: 1rem; /* 16px */\n}\n.avatar--large {\n  width: 56px;\n  height: 56px;\n  font-size: 1.25rem; /* 20px */\n}\n\n/* Форма */\n.avatar--circle {\n  border-radius: 50%;\n}\n.avatar--square {\n  border-radius: 4px; /* Небольшое скругление для квадрата */\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Avatar/Avatar.css\"],\"names\":[],\"mappings\":\"AAAA,8BAA8B;AAC9B;EACE,oBAAoB,EAAE,uCAAuC;EAC7D,mBAAmB;EACnB,uBAAuB;EACvB,sBAAsB;EACtB,gBAAgB,EAAE,yCAAyC;EAC3D,iBAAiB;EACjB,yBAAyB,EAAE,8CAA8C;EACzE,cAAc,EAAE,oCAAoC;EACpD,gBAAgB;EAChB,WAAW,EAAE,yBAAyB;AACxC;;AAEA,0BAA0B;AAC1B;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB,EAAE,iDAAiD;EACpE,cAAc,EAAE,gCAAgC;AAClD;;AAEA,wBAAwB;AACxB;EACE,kBAAkB;EAClB,cAAc,EAAE,6BAA6B;EAC7C,WAAW,EAAE,oEAAoE;AACnF;;AAEA,oCAAoC;AACpC;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;IACX,YAAY;AAChB;;AAEA;EACE,cAAc;EACd,UAAU;EACV,WAAW;EACX,kBAAkB;AACpB;;AAEA,YAAY;AACZ;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB,EAAE,SAAS;AAC/B;AACA;EACE,WAAW;EACX,YAAY;EACZ,eAAe,EAAE,SAAS;AAC5B;AACA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB,EAAE,SAAS;AAC/B;;AAEA,UAAU;AACV;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB,EAAE,sCAAsC;AAC5D\",\"sourcesContent\":[\"/* Базовый контейнер аватара */\\n.avatar-container {\\n  display: inline-flex; /* Чтобы занимал место по содержимому */\\n  align-items: center;\\n  justify-content: center;\\n  vertical-align: middle;\\n  overflow: hidden; /* Скрываем все, что выходит за границы */\\n  user-select: none;\\n  background-color: #e0e0e0; /* Фоновый цвет для инициалов и плейсхолдера */\\n  color: #757575; /* Цвет текста/иконки по умолчанию */\\n  font-weight: 500;\\n  margin: 5px; /* Отступ для Storybook */\\n}\\n\\n/* Стили для изображения */\\n.avatar-image {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover; /* Масштабируем изображение, сохраняя пропорции */\\n  display: block; /* Убираем лишний отступ снизу */\\n}\\n\\n/* Стили для инициалов */\\n.avatar-initials {\\n  text-align: center;\\n  line-height: 1; /* Для лучшего выравнивания */\\n  color: #333; /* Делаем цвет текста темнее для лучшей читаемости на цветном фоне */\\n}\\n\\n/* Стили для плейсхолдера (иконки) */\\n.avatar-placeholder {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.avatar-placeholder svg {\\n  display: block;\\n  width: 60%;\\n  height: 60%;\\n  fill: currentColor;\\n}\\n\\n/* Размеры */\\n.avatar--small {\\n  width: 24px;\\n  height: 24px;\\n  font-size: 0.75rem; /* 12px */\\n}\\n.avatar--medium {\\n  width: 40px;\\n  height: 40px;\\n  font-size: 1rem; /* 16px */\\n}\\n.avatar--large {\\n  width: 56px;\\n  height: 56px;\\n  font-size: 1.25rem; /* 20px */\\n}\\n\\n/* Форма */\\n.avatar--circle {\\n  border-radius: 50%;\\n}\\n.avatar--square {\\n  border-radius: 4px; /* Небольшое скругление для квадрата */\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Avatar.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Avatar.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Avatar.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport Avatar from './Avatar';\n\nconst meta: Meta<typeof Avatar> = {\n  title: 'Components/Avatar',\n  component: Avatar,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    src: { control: 'text', description: 'URL изображения' },\n    alt: { control: 'text', description: 'Alt текст' },\n    name: { control: 'text', description: 'Имя для инициалов (если нет src)' },\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large'],\n      description: 'Размер аватара',\n    },\n    shape: {\n      control: 'select',\n      options: ['circle', 'square'],\n      description: 'Форма аватара',\n    },\n  },\n  args: { // Значения по умолчанию\n    size: 'medium',\n    shape: 'circle',\n    alt: 'Аватар пользователя',\n  }\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// История с изображением\nexport const Image: Story = {\n  args: {\n    src: 'https://via.placeholder.com/150/007bff/ffffff?text=IMG', // Пример URL\n    name: 'Имя Пользователя', // Имя нужно для alt текста, если src не загрузится\n  },\n};\n\n// История с инициалами\nexport const Initials: Story = {\n  args: {\n    src: null, // Убираем src, чтобы показать инициалы\n    name: 'Антон Хавкин',\n  },\n};\n\n// История с одной инициалой\nexport const SingleInitial: Story = {\n  args: {\n    src: null,\n    name: 'Антон',\n  },\n};\n\n\n// История с плейсхолдером (без src и name)\nexport const Placeholder: Story = {\n  args: {\n    src: null,\n    name: '',\n  },\n};\n\n// История с ошибкой загрузки изображения (покажет инициалы)\nexport const ImageError: Story = {\n  args: {\n    src: 'https://nonexistent-image-url.xyz/image.jpg', // Несуществующий URL\n    name: 'Ошибка Загрузки',\n  },\n};\n\n// Разные размеры\nexport const Small: Story = { args: { size: 'small', name: 'S' } };\nexport const Medium: Story = { args: { size: 'medium', name: 'M' } };\nexport const Large: Story = { args: { size: 'large', name: 'L' } };\n\n// Разные формы\nexport const Circle: Story = { args: { shape: 'circle', name: 'Круг' } };\nexport const Square: Story = { args: { shape: 'square', name: 'Квадрат' } };\n\n// Квадратный с изображением\nexport const SquareImage: Story = {\n    args: {\n        shape: 'square',\n        src: 'https://via.placeholder.com/150/28a745/ffffff?text=Квадрат',\n        name: 'Квадратный Аватар'\n    }\n}; ","import React from 'react';\nimport './Avatar.css'; // Импортируем стили\n\ntype AvatarSize = 'small' | 'medium' | 'large';\ntype AvatarShape = 'circle' | 'square';\n\ninterface AvatarProps extends React.HTMLAttributes<HTMLDivElement> {\n  src?: string | null;    // URL изображения\n  alt?: string;           // Alt текст для изображения\n  name?: string;          // Имя для генерации инициалов\n  size?: AvatarSize;      // Размер\n  shape?: AvatarShape;    // Форма\n}\n\n// Функция для получения инициалов из имени\nconst getInitials = (name: string): string => {\n  if (!name) return '';\n  const names = name.trim().split(' ');\n  if (names.length === 1) {\n    return names[0].charAt(0).toUpperCase();\n  }\n  return (names[0].charAt(0) + names[names.length - 1].charAt(0)).toUpperCase();\n};\n\n// --- Добавляем генерацию цвета --- \nconst stringToColor = (str: string) => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  // Генерируем цвет в формате HSL для лучшего распределения\n  const h = hash % 360;\n  // Ограничиваем насыщенность и светлоту для получения пастельных тонов\n  const s = 60 + (hash % 10); // 60-70%\n  const l = 75 + (hash % 10); // 75-85%\n  return `hsl(${h}, ${s}%, ${l}%)`;\n};\n// ----------------------------------\n\nconst Avatar: React.FC<AvatarProps> = ({\n  src = null,\n  alt = 'Avatar',\n  name = '',\n  size = 'medium',\n  shape = 'circle',\n  className, // Пользовательские классы\n  style,     // Пользовательские стили\n  ...props   // Остальные div атрибуты\n}) => {\n  const [imgError, setImgError] = React.useState(false); // Состояние ошибки загрузки изображения\n\n  // --- Генерируем цвет фона, если показываем инициалы --- \n  const backgroundColor = !src && name ? stringToColor(name) : undefined;\n  // -------------------------------------------------------\n\n  // Определяем, что отображать: изображение, инициалы или плейсхолдер\n  let content: React.ReactNode;\n  const showImage = src && !imgError;\n  const showInitials = !showImage && name;\n\n  if (showImage) {\n    content = (\n      <img\n        src={src}\n        alt={alt}\n        className=\"avatar-image\"\n        onError={() => setImgError(true)} // Устанавливаем ошибку при неудачной загрузке\n      />\n    );\n  } else if (showInitials) {\n    content = (\n      <span className=\"avatar-initials\" aria-label={alt}>\n        {getInitials(name)}\n      </span>\n    );\n  } else {\n    // Плейсхолдер (можно вставить SVG иконку пользователя)\n    content = (\n      <span className=\"avatar-placeholder\" aria-label={alt}>\n        {/* Пример SVG иконки пользователя (можно вынести в отдельный компонент Icon) */}\n        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\">\n          <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n        </svg>\n      </span>\n    );\n  }\n\n  const avatarClassName = [\n    'avatar-container',\n    `avatar--${size}`,\n    `avatar--${shape}`,\n    className,\n  ].filter(Boolean).join(' ');\n\n  // --- Объединяем переданные стили со сгенерированным фоном --- \n  const combinedStyle = {\n    ...style, // Пользовательские стили\n    backgroundColor: backgroundColor || style?.backgroundColor, // Применяем сгенерированный фон, если он есть, иначе оставляем пользовательский или дефолтный из CSS\n  };\n  // ------------------------------------------------------------\n\n  return (\n    <div className={avatarClassName} style={combinedStyle} {...props}>\n      {content}\n    </div>\n  );\n};\n\nexport default Avatar; "],"names":[],"sourceRoot":""}