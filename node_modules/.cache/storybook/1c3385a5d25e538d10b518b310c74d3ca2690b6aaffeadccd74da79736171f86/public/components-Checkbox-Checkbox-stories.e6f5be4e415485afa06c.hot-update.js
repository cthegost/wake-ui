self["webpackHotUpdatewake_ui"]("components-Checkbox-Checkbox-stories",{

/***/ "./src/components/Checkbox/Checkbox.stories.tsx":
/*!******************************************************!*\
  !*** ./src/components/Checkbox/Checkbox.stories.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Checked: () => (/* binding */ Checked),
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   DisabledChecked: () => (/* binding */ DisabledChecked),
/* harmony export */   DisabledIndeterminate: () => (/* binding */ DisabledIndeterminate),
/* harmony export */   Indeterminate: () => (/* binding */ Indeterminate),
/* harmony export */   SelectAllExample: () => (/* binding */ SelectAllExample),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Checkbox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Checkbox */ "./src/components/Checkbox/Checkbox.tsx");
/* harmony import */ var _Checkbox__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Checkbox__WEBPACK_IMPORTED_MODULE_2__);



const meta = {
  title: 'Components/Checkbox',
  component: (_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()),
  parameters: {
    layout: 'centered'
  },
  tags: ['autodocs'],
  argTypes: {
    label: {
      control: 'text',
      description: 'Текст лейбла рядом с чекбоксом'
    },
    checked: {
      control: 'boolean',
      description: 'Состояние: отмечен / не отмечен'
    },
    indeterminate: {
      control: 'boolean',
      description: 'Состояние: неопределенное'
    },
    disabled: {
      control: 'boolean',
      description: 'Отключает чекбокс'
    }
  },
  args: {
    label: 'Метка чекбокса',
    checked: false,
    indeterminate: false,
    disabled: false
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// --- Базовые истории ---
const Default = {
  render: args => {
    const [isChecked, setIsChecked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.checked);
    // Сбрасываем indeterminate при явном клике пользователя
    const handleChange = e => {
      setIsChecked(e.target.checked);
      // Здесь может быть логика, которая также сбрасывает indeterminate,
      // но в Storybook для простоты оставим управление через args.
    };
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()), {
      ...args,
      checked: isChecked,
      onChange: handleChange
    }, void 0, false, {
      fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
      lineNumber: 40,
      columnNumber: 12
    }, undefined);
  }
};
const Checked = {
  args: {
    checked: true,
    label: 'Уже отмечен'
  },
  render: args => {
    const [isChecked, setIsChecked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.checked);
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()), {
      ...args,
      checked: isChecked,
      onChange: e => setIsChecked(e.target.checked)
    }, void 0, false, {
      fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
      lineNumber: 48,
      columnNumber: 12
    }, undefined);
  }
};
const Indeterminate = {
  args: {
    indeterminate: true,
    label: 'Неопределенное состояние'
  },
  render: args => {
    // Для демонстрации indeterminate часто управляют checked и indeterminate извне
    const [isChecked, setIsChecked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Может быть true или false
    const [isIndeterminate, setIsIndeterminate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.indeterminate);
    const handleChange = e => {
      const newChecked = e.target.checked;
      setIsChecked(newChecked);
      setIsIndeterminate(false); // Сбрасываем indeterminate при клике
    };
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()), {
      ...args,
      label: `Checked: ${isChecked}, Indet: ${isIndeterminate}`,
      checked: isChecked,
      indeterminate: isIndeterminate,
      onChange: handleChange
    }, void 0, false, {
      fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
      lineNumber: 65,
      columnNumber: 12
    }, undefined);
  }
};
const Disabled = {
  args: {
    disabled: true,
    label: 'Отключен (не отмечен)'
  },
  render: args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()), {
    ...args
  }, void 0, false, {
    fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
    lineNumber: 71,
    columnNumber: 21
  }, undefined)
};
const DisabledChecked = {
  args: {
    disabled: true,
    checked: true,
    label: 'Отключен (отмечен)'
  },
  render: args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()), {
    ...args
  }, void 0, false, {
    fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
    lineNumber: 76,
    columnNumber: 21
  }, undefined)
};
const DisabledIndeterminate = {
  args: {
    disabled: true,
    indeterminate: true,
    label: 'Отключен (неопределен)'
  },
  render: args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()), {
    ...args
  }, void 0, false, {
    fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
    lineNumber: 81,
    columnNumber: 21
  }, undefined)
};
// --- Пример использования Indeterminate ---
const SelectAllExample = {
  name: 'Пример: Выбрать все',
  render: () => {
    const options = ['Яблоко', 'Банан', 'Апельсин'];
    const [selected, setSelected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(['Банан']); // Изначально выбран 'Банан'
    const handleParentChange = e => {
      setSelected(e.target.checked ? options : []);
    };
    const handleChildChange = option => e => {
      if (e.target.checked) {
        setSelected([...selected, option]);
      } else {
        setSelected(selected.filter(item => item !== option));
      }
    };
    const isAllSelected = selected.length === options.length;
    const isIndeterminate = selected.length > 0 && selected.length < options.length;
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
      style: {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'flex-start'
      },
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()), {
        label: "Выбрать все",
        checked: isAllSelected,
        indeterminate: isIndeterminate,
        onChange: handleParentChange
      }, void 0, false, {
        fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
        lineNumber: 108,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
        style: {
          marginLeft: '20px',
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'flex-start'
        },
        children: options.map(option => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_Checkbox__WEBPACK_IMPORTED_MODULE_2___default()), {
          label: option,
          checked: selected.includes(option),
          onChange: handleChildChange(option)
        }, option, false, {
          fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
          lineNumber: 116,
          columnNumber: 13
        }, undefined))
      }, void 0, false, {
        fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
        lineNumber: 114,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Checkbox/Checkbox.stories.tsx",
      lineNumber: 107,
      columnNumber: 7
    }, undefined);
  }
};
;
const __namedExportsOrder = ["Default", "Checked", "Indeterminate", "Disabled", "DisabledChecked", "DisabledIndeterminate", "SelectAllExample"];
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  render: args => {\n    const [isChecked, setIsChecked] = useState(args.checked);\n    // \u0421\u0431\u0440\u0430\u0441\u044B\u0432\u0430\u0435\u043C indeterminate \u043F\u0440\u0438 \u044F\u0432\u043D\u043E\u043C \u043A\u043B\u0438\u043A\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setIsChecked(e.target.checked);\n      // \u0417\u0434\u0435\u0441\u044C \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043B\u043E\u0433\u0438\u043A\u0430, \u043A\u043E\u0442\u043E\u0440\u0430\u044F \u0442\u0430\u043A\u0436\u0435 \u0441\u0431\u0440\u0430\u0441\u044B\u0432\u0430\u0435\u0442 indeterminate,\n      // \u043D\u043E \u0432 Storybook \u0434\u043B\u044F \u043F\u0440\u043E\u0441\u0442\u043E\u0442\u044B \u043E\u0441\u0442\u0430\u0432\u0438\u043C \u0443\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 args.\n    };\n    return <Checkbox {...args} checked={isChecked} onChange={handleChange} />;\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
Checked.parameters = {
  ...Checked.parameters,
  docs: {
    ...Checked.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    checked: true,\n    label: '\u0423\u0436\u0435 \u043E\u0442\u043C\u0435\u0447\u0435\u043D'\n  },\n  render: args => {\n    const [isChecked, setIsChecked] = useState(args.checked);\n    return <Checkbox {...args} checked={isChecked} onChange={e => setIsChecked(e.target.checked)} />;\n  }\n}",
      ...Checked.parameters?.docs?.source
    }
  }
};
Indeterminate.parameters = {
  ...Indeterminate.parameters,
  docs: {
    ...Indeterminate.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    indeterminate: true,\n    label: '\u041D\u0435\u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435'\n  },\n  render: args => {\n    // \u0414\u043B\u044F \u0434\u0435\u043C\u043E\u043D\u0441\u0442\u0440\u0430\u0446\u0438\u0438 indeterminate \u0447\u0430\u0441\u0442\u043E \u0443\u043F\u0440\u0430\u0432\u043B\u044F\u044E\u0442 checked \u0438 indeterminate \u0438\u0437\u0432\u043D\u0435\n    const [isChecked, setIsChecked] = useState(false); // \u041C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C true \u0438\u043B\u0438 false\n    const [isIndeterminate, setIsIndeterminate] = useState(args.indeterminate);\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newChecked = e.target.checked;\n      setIsChecked(newChecked);\n      setIsIndeterminate(false); // \u0421\u0431\u0440\u0430\u0441\u044B\u0432\u0430\u0435\u043C indeterminate \u043F\u0440\u0438 \u043A\u043B\u0438\u043A\u0435\n    };\n    return <Checkbox {...args} label={`Checked: ${isChecked}, Indet: ${isIndeterminate}`} checked={isChecked} indeterminate={isIndeterminate} onChange={handleChange} />;\n  }\n}",
      ...Indeterminate.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    disabled: true,\n    label: '\u041E\u0442\u043A\u043B\u044E\u0447\u0435\u043D (\u043D\u0435 \u043E\u0442\u043C\u0435\u0447\u0435\u043D)'\n  },\n  render: args => <Checkbox {...args} /> // \u041C\u043E\u0436\u043D\u043E \u043D\u0435 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C state\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};
DisabledChecked.parameters = {
  ...DisabledChecked.parameters,
  docs: {
    ...DisabledChecked.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    disabled: true,\n    checked: true,\n    label: '\u041E\u0442\u043A\u043B\u044E\u0447\u0435\u043D (\u043E\u0442\u043C\u0435\u0447\u0435\u043D)'\n  },\n  render: args => <Checkbox {...args} />\n}",
      ...DisabledChecked.parameters?.docs?.source
    }
  }
};
DisabledIndeterminate.parameters = {
  ...DisabledIndeterminate.parameters,
  docs: {
    ...DisabledIndeterminate.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    disabled: true,\n    indeterminate: true,\n    label: '\u041E\u0442\u043A\u043B\u044E\u0447\u0435\u043D (\u043D\u0435\u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D)'\n  },\n  render: args => <Checkbox {...args} />\n}",
      ...DisabledIndeterminate.parameters?.docs?.source
    }
  }
};
SelectAllExample.parameters = {
  ...SelectAllExample.parameters,
  docs: {
    ...SelectAllExample.parameters?.docs,
    source: {
      originalSource: "{\n  name: '\u041F\u0440\u0438\u043C\u0435\u0440: \u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0432\u0441\u0435',\n  render: () => {\n    const options = ['\u042F\u0431\u043B\u043E\u043A\u043E', '\u0411\u0430\u043D\u0430\u043D', '\u0410\u043F\u0435\u043B\u044C\u0441\u0438\u043D'];\n    const [selected, setSelected] = useState<string[]>(['\u0411\u0430\u043D\u0430\u043D']); // \u0418\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u043E \u0432\u044B\u0431\u0440\u0430\u043D '\u0411\u0430\u043D\u0430\u043D'\n\n    const handleParentChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSelected(e.target.checked ? options : []);\n    };\n    const handleChildChange = (option: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.target.checked) {\n        setSelected([...selected, option]);\n      } else {\n        setSelected(selected.filter(item => item !== option));\n      }\n    };\n    const isAllSelected = selected.length === options.length;\n    const isIndeterminate = selected.length > 0 && selected.length < options.length;\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }}>\n        <Checkbox label=\"\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0432\u0441\u0435\" checked={isAllSelected} indeterminate={isIndeterminate} onChange={handleParentChange} />\n        <div style={{\n        marginLeft: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start'\n      }}>\n          {options.map(option => <Checkbox key={option} label={option} checked={selected.includes(option)} onChange={handleChildChange(option)} />)}\n        </div>\n      </div>;\n  }\n}",
      ...SelectAllExample.parameters?.docs?.source
    }
  }
};

/***/ }),

/***/ "./src/components/Checkbox/Checkbox.tsx":
/*!**********************************************!*\
  !*** ./src/components/Checkbox/Checkbox.tsx ***!
  \**********************************************/
/***/ (() => {



/***/ })

});
//# sourceMappingURL=components-Checkbox-Checkbox-stories.e6f5be4e415485afa06c.hot-update.js.map