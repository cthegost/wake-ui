{"version":3,"file":"components-RangeSlider-RangeSlider-stories.iframe.bundle.js","mappingsrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AAcA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;AAGA;AAAA;;AACA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAGA;AACA;;AACA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://wake-ui/./src/components/RangeSlider/RangeSlider.css","webpack://wake-ui/./src/components/RangeSlider/RangeSlider.css?2518","webpack://wake-ui/./src/components/RangeSlider/RangeSlider.stories.tsx","webpack://wake-ui/./src/components/RangeSlider/RangeSlider.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Общий контейнер */\n.range-slider-container {\n  width: 300px; /* Пример ширины */\n  padding: 10px 0;\n  margin: 5px;\n}\n\n/* Лейбл над слайдером */\n.range-slider-label {\n   display: block;\n   margin-bottom: 1rem;\n   font-size: 0.9rem;\n   color: #333;\n   font-weight: 500;\n}\n\n/* Контейнер для самого слайдера (инпутов и дорожек) */\n.range-slider {\n  position: relative;\n  height: 20px; /* Высота для размещения ползунков */\n  display: flex;\n  align-items: center;\n}\n\n/* Базовые стили для скрытых input type=\"range\" (ползунков) */\n.range-slider__thumb,\n.range-slider__thumb::-webkit-slider-thumb,\n.range-slider__thumb::-moz-range-thumb {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  position: absolute;\n  height: 16px; /* Высота ползунка */\n  width: 16px;  /* Ширина ползунка */\n  background-color: #007bff; /* Цвет ползунка */\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  z-index: 2; /* По умолчанию */\n  pointer-events: none; /* Отключаем события на самом input */\n}\n\n/* Стили для самих input (дорожка скрыта) */\n.range-slider__thumb {\n  pointer-events: auto; /* Включаем события для перемещения */\n  width: 100%; /* Растягиваем на всю ширину */\n  height: 4px; /* Делаем невидимым по высоте, но кликабельным */\n  background: none; /* Убираем фон */\n  outline: none;\n}\n\n/* Позиционирование ползунков */\n.range-slider__thumb--zindex-3 {\n  z-index: 3;\n}\n.range-slider__thumb--zindex-4 {\n  z-index: 4;\n}\n\n/* Webkit стили для ползунка */\n.range-slider__thumb::-webkit-slider-thumb {\n  pointer-events: auto;\n  position: relative; /* Важно для правильного позиционирования */\n  margin-top: -6px; /* Коррекция позиции для webkit ( (16px - 4px) / 2 ) */\n}\n\n/* Firefox стили для ползунка */\n.range-slider__thumb::-moz-range-thumb {\n  pointer-events: auto;\n  position: relative; /* Важно для правильного позиционирования */\n  /* Firefox не нуждается в коррекции margin-top */\n}\n\n/* Контейнер для визуальных дорожек */\n.range-slider__track-container {\n  position: absolute;\n  top: 50%;\n  left: 8px; /* Половина ширины ползунка */\n  right: 8px; /* Половина ширины ползунка */\n  height: 4px; /* Высота дорожки */\n  transform: translateY(-50%);\n  pointer-events: none; /* Не мешает кликам на ползунки */\n  z-index: 1;\n}\n\n/* Основная серая дорожка */\n.range-slider__track {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #dee2e6; /* Цвет фона дорожки */\n  border-radius: 3px;\n}\n\n/* Выделенный диапазон (синий) */\n.range-slider__range {\n  position: absolute;\n  height: 100%;\n  background-color: #007bff; /* Цвет выделенного диапазона */\n  border-radius: 3px;\n  z-index: 2; /* Над серой дорожкой */\n}\n\n/* Отображение текущих значений */\n.range-slider-values {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 8px;\n  font-size: 0.85rem;\n  color: #6c757d;\n}\n\n/* Стили для отключенного состояния */\n.range-slider--disabled {\n    opacity: 0.6;\n}\n.range-slider--disabled .range-slider__thumb,\n.range-slider--disabled .range-slider__thumb::-webkit-slider-thumb,\n.range-slider--disabled .range-slider__thumb::-moz-range-thumb {\n    cursor: not-allowed;\n    background-color: #adb5bd; /* Серый ползунок */\n}\n.range-slider--disabled .range-slider__range {\n    background-color: #adb5bd; /* Серый диапазон */\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/RangeSlider/RangeSlider.css\"],\"names\":[],\"mappings\":\"AAAA,oBAAoB;AACpB;EACE,YAAY,EAAE,kBAAkB;EAChC,eAAe;EACf,WAAW;AACb;;AAEA,wBAAwB;AACxB;GACG,cAAc;GACd,mBAAmB;GACnB,iBAAiB;GACjB,WAAW;GACX,gBAAgB;AACnB;;AAEA,sDAAsD;AACtD;EACE,kBAAkB;EAClB,YAAY,EAAE,oCAAoC;EAClD,aAAa;EACb,mBAAmB;AACrB;;AAEA,6DAA6D;AAC7D;;;EAGE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,kBAAkB;EAClB,YAAY,EAAE,oBAAoB;EAClC,WAAW,GAAG,oBAAoB;EAClC,yBAAyB,EAAE,kBAAkB;EAC7C,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,SAAS;EACT,UAAU;EACV,UAAU,EAAE,iBAAiB;EAC7B,oBAAoB,EAAE,qCAAqC;AAC7D;;AAEA,2CAA2C;AAC3C;EACE,oBAAoB,EAAE,qCAAqC;EAC3D,WAAW,EAAE,8BAA8B;EAC3C,WAAW,EAAE,gDAAgD;EAC7D,gBAAgB,EAAE,gBAAgB;EAClC,aAAa;AACf;;AAEA,+BAA+B;AAC/B;EACE,UAAU;AACZ;AACA;EACE,UAAU;AACZ;;AAEA,8BAA8B;AAC9B;EACE,oBAAoB;EACpB,kBAAkB,EAAE,2CAA2C;EAC/D,gBAAgB,EAAE,sDAAsD;AAC1E;;AAEA,+BAA+B;AAC/B;EACE,oBAAoB;EACpB,kBAAkB,EAAE,2CAA2C;EAC/D,gDAAgD;AAClD;;AAEA,qCAAqC;AACrC;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS,EAAE,6BAA6B;EACxC,UAAU,EAAE,6BAA6B;EACzC,WAAW,EAAE,mBAAmB;EAChC,2BAA2B;EAC3B,oBAAoB,EAAE,iCAAiC;EACvD,UAAU;AACZ;;AAEA,2BAA2B;AAC3B;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,yBAAyB,EAAE,sBAAsB;EACjD,kBAAkB;AACpB;;AAEA,gCAAgC;AAChC;EACE,kBAAkB;EAClB,YAAY;EACZ,yBAAyB,EAAE,+BAA+B;EAC1D,kBAAkB;EAClB,UAAU,EAAE,uBAAuB;AACrC;;AAEA,iCAAiC;AACjC;EACE,aAAa;EACb,8BAA8B;EAC9B,eAAe;EACf,kBAAkB;EAClB,cAAc;AAChB;;AAEA,qCAAqC;AACrC;IACI,YAAY;AAChB;AACA;;;IAGI,mBAAmB;IACnB,yBAAyB,EAAE,mBAAmB;AAClD;AACA;IACI,yBAAyB,EAAE,mBAAmB;AAClD\",\"sourcesContent\":[\"/* Общий контейнер */\\n.range-slider-container {\\n  width: 300px; /* Пример ширины */\\n  padding: 10px 0;\\n  margin: 5px;\\n}\\n\\n/* Лейбл над слайдером */\\n.range-slider-label {\\n   display: block;\\n   margin-bottom: 1rem;\\n   font-size: 0.9rem;\\n   color: #333;\\n   font-weight: 500;\\n}\\n\\n/* Контейнер для самого слайдера (инпутов и дорожек) */\\n.range-slider {\\n  position: relative;\\n  height: 20px; /* Высота для размещения ползунков */\\n  display: flex;\\n  align-items: center;\\n}\\n\\n/* Базовые стили для скрытых input type=\\\"range\\\" (ползунков) */\\n.range-slider__thumb,\\n.range-slider__thumb::-webkit-slider-thumb,\\n.range-slider__thumb::-moz-range-thumb {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  position: absolute;\\n  height: 16px; /* Высота ползунка */\\n  width: 16px;  /* Ширина ползунка */\\n  background-color: #007bff; /* Цвет ползунка */\\n  border-radius: 50%;\\n  border: none;\\n  cursor: pointer;\\n  margin: 0;\\n  padding: 0;\\n  z-index: 2; /* По умолчанию */\\n  pointer-events: none; /* Отключаем события на самом input */\\n}\\n\\n/* Стили для самих input (дорожка скрыта) */\\n.range-slider__thumb {\\n  pointer-events: auto; /* Включаем события для перемещения */\\n  width: 100%; /* Растягиваем на всю ширину */\\n  height: 4px; /* Делаем невидимым по высоте, но кликабельным */\\n  background: none; /* Убираем фон */\\n  outline: none;\\n}\\n\\n/* Позиционирование ползунков */\\n.range-slider__thumb--zindex-3 {\\n  z-index: 3;\\n}\\n.range-slider__thumb--zindex-4 {\\n  z-index: 4;\\n}\\n\\n/* Webkit стили для ползунка */\\n.range-slider__thumb::-webkit-slider-thumb {\\n  pointer-events: auto;\\n  position: relative; /* Важно для правильного позиционирования */\\n  margin-top: -6px; /* Коррекция позиции для webkit ( (16px - 4px) / 2 ) */\\n}\\n\\n/* Firefox стили для ползунка */\\n.range-slider__thumb::-moz-range-thumb {\\n  pointer-events: auto;\\n  position: relative; /* Важно для правильного позиционирования */\\n  /* Firefox не нуждается в коррекции margin-top */\\n}\\n\\n/* Контейнер для визуальных дорожек */\\n.range-slider__track-container {\\n  position: absolute;\\n  top: 50%;\\n  left: 8px; /* Половина ширины ползунка */\\n  right: 8px; /* Половина ширины ползунка */\\n  height: 4px; /* Высота дорожки */\\n  transform: translateY(-50%);\\n  pointer-events: none; /* Не мешает кликам на ползунки */\\n  z-index: 1;\\n}\\n\\n/* Основная серая дорожка */\\n.range-slider__track {\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  background-color: #dee2e6; /* Цвет фона дорожки */\\n  border-radius: 3px;\\n}\\n\\n/* Выделенный диапазон (синий) */\\n.range-slider__range {\\n  position: absolute;\\n  height: 100%;\\n  background-color: #007bff; /* Цвет выделенного диапазона */\\n  border-radius: 3px;\\n  z-index: 2; /* Над серой дорожкой */\\n}\\n\\n/* Отображение текущих значений */\\n.range-slider-values {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 8px;\\n  font-size: 0.85rem;\\n  color: #6c757d;\\n}\\n\\n/* Стили для отключенного состояния */\\n.range-slider--disabled {\\n    opacity: 0.6;\\n}\\n.range-slider--disabled .range-slider__thumb,\\n.range-slider--disabled .range-slider__thumb::-webkit-slider-thumb,\\n.range-slider--disabled .range-slider__thumb::-moz-range-thumb {\\n    cursor: not-allowed;\\n    background-color: #adb5bd; /* Серый ползунок */\\n}\\n.range-slider--disabled .range-slider__range {\\n    background-color: #adb5bd; /* Серый диапазон */\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./RangeSlider.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./RangeSlider.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./RangeSlider.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport RangeSlider from './RangeSlider';\n\nconst meta: Meta<typeof RangeSlider> = {\n  title: 'Components/RangeSlider',\n  component: RangeSlider,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    min: { control: 'number', description: 'Минимальное значение' },\n    max: { control: 'number', description: 'Максимальное значение' },\n    step: { control: 'number', description: 'Шаг изменения значения' },\n    value: { control: 'object', description: 'Массив [min, max] текущего диапазона' },\n    onChange: { action: 'changed', description: 'Callback при изменении диапазона' },\n    disabled: { control: 'boolean', description: 'Отключает слайдер' },\n    label: { control: 'text', description: 'Лейбл над слайдером' },\n    showValues: { control: 'boolean', description: 'Показывать ли текущие значения' },\n  },\n  args: { // Значения по умолчанию\n    min: 0,\n    max: 100,\n    step: 1,\n    value: [25, 75], // Начальный диапазон\n    disabled: false,\n    label: 'Выберите диапазон',\n    showValues: true,\n  }\n};\n\nexport default meta;\n\n// --- Истории ---\n\nexport const Default: StoryObj<typeof RangeSlider> = {\n  render: (args) => {\n    const [currentValue, setCurrentValue] = useState<[number, number]>(args.value);\n    return (\n      <RangeSlider\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\nexport const PriceRange: StoryObj<typeof RangeSlider> = {\n  args: {\n    min: 1000,\n    max: 50000,\n    step: 100,\n    value: [5000, 30000],\n    label: 'Диапазон цен',\n    showValues: true,\n  },\n  render: (args) => {\n    const [currentValue, setCurrentValue] = useState<[number, number]>(args.value);\n    return (\n      <RangeSlider\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\n\nexport const WithoutValues: StoryObj<typeof RangeSlider> = {\n  args: {\n    ...Default.args, // Берем аргументы из Default\n    label: 'Слайдер без значений',\n    showValues: false, // Скрываем значения\n  },\n  render: (args) => {\n    const [currentValue, setCurrentValue] = useState<[number, number]>(args.value);\n    return (\n      <RangeSlider\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\n\nexport const Disabled: StoryObj<typeof RangeSlider> = {\n    args: {\n        ...Default.args,\n        label: 'Отключенный слайдер',\n        value: [10, 90],\n        disabled: true,\n    },\n     render: (args) => {\n        return <RangeSlider {...args} />;\n    },\n}; ","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport './RangeSlider.css'; // Импортируем стили\n\ninterface RangeSliderProps {\n  min: number;\n  max: number;\n  step?: number;\n  value: [number, number]; // Массив [minValue, maxValue]\n  onChange: (newValue: [number, number]) => void;\n  disabled?: boolean;\n  label?: string; // Лейбл над слайдером\n  showValues?: boolean; // Показывать ли текущие значения\n  className?: string; // Пользовательский класс\n}\n\nconst RangeSlider: React.FC<RangeSliderProps> = ({\n  min,\n  max,\n  step = 1,\n  value,\n  onChange,\n  disabled = false,\n  label,\n  showValues = false,\n  className,\n}) => {\n  const [minValue, setMinValue] = useState(value[0]);\n  const [maxValue, setMaxValue] = useState(value[1]);\n  const minValRef = useRef<HTMLInputElement>(null);\n  const maxValRef = useRef<HTMLInputElement>(null);\n  const rangeRef = useRef<HTMLDivElement>(null);\n\n  // Преобразуем значение в проценты для позиционирования\n  const getPercent = useCallback(\n    (val: number) => Math.round(((val - min) / (max - min)) * 100),\n    [min, max]\n  );\n\n  // Обновляем внутреннее состояние при изменении value из пропсов\n  useEffect(() => {\n    setMinValue(value[0]);\n    setMaxValue(value[1]);\n  }, [value]);\n\n  // Обновляем позицию выделенного диапазона при изменении значений\n  useEffect(() => {\n    if (maxValRef.current) {\n      const minPercent = getPercent(minValue);\n      const maxPercent = getPercent(+maxValRef.current.value); // Берем текущее значение второго ползунка\n\n      if (rangeRef.current) {\n        rangeRef.current.style.left = `${minPercent}%`;\n        rangeRef.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [minValue, getPercent]);\n\n  useEffect(() => {\n    if (minValRef.current) {\n      const minPercent = getPercent(+minValRef.current.value); // Берем текущее значение первого ползунка\n      const maxPercent = getPercent(maxValue);\n\n      if (rangeRef.current) {\n        rangeRef.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [maxValue, getPercent]);\n\n  // Обработчик изменения для onChange (вызывается при отпускании ползунка)\n  const triggerOnChange = () => {\n    onChange([minValue, maxValue]);\n  };\n\n  const handleMinChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newMinValue = Math.min(+event.target.value, maxValue - step); // Гарантируем, что min < max\n    setMinValue(newMinValue);\n    // Не вызываем onChange здесь, а только при отпускании мыши (onMouseUp/onTouchEnd)\n    // или можно добавить проп для real-time обновления\n  };\n\n   const handleMaxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newMaxValue = Math.max(+event.target.value, minValue + step); // Гарантируем, что max > min\n    setMaxValue(newMaxValue);\n    // Не вызываем onChange здесь\n  };\n\n\n  const containerClassName = [\n      'range-slider-container',\n      disabled ? 'range-slider--disabled' : '',\n      className,\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={containerClassName}>\n       {label && <label className=\"range-slider-label\">{label}</label>}\n      <div className=\"range-slider\">\n        <input\n          type=\"range\"\n          ref={minValRef}\n          min={min}\n          max={max}\n          step={step}\n          value={minValue}\n          onChange={handleMinChange}\n          onMouseUp={triggerOnChange} // Вызов onChange при отпускании\n          onTouchEnd={triggerOnChange} // Вызов onChange при отпускании на таче\n          className=\"range-slider__thumb range-slider__thumb--zindex-3\" // z-index 3\n          disabled={disabled}\n        />\n        <input\n          type=\"range\"\n          ref={maxValRef}\n          min={min}\n          max={max}\n          step={step}\n          value={maxValue}\n          onChange={handleMaxChange}\n          onMouseUp={triggerOnChange}\n          onTouchEnd={triggerOnChange}\n          className=\"range-slider__thumb range-slider__thumb--zindex-4\" // z-index 4 (чтобы был поверх min ползунка)\n          disabled={disabled}\n        />\n\n        <div className=\"range-slider__track-container\">\n          <div className=\"range-slider__track\" />\n          <div ref={rangeRef} className=\"range-slider__range\" />\n        </div>\n      </div>\n       {showValues && (\n         <div className=\"range-slider-values\">\n           <span>{minValue}</span>\n           <span>{maxValue}</span>\n         </div>\n       )}\n    </div>\n  );\n};\n\nexport default RangeSlider; "],"names":[],"sourceRoot":""}