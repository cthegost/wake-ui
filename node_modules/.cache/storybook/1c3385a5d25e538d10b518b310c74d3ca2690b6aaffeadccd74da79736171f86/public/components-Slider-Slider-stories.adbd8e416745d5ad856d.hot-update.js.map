{"version":3,"file":"components-Slider-Slider-stories.adbd8e416745d5ad856d.hot-update.js","mappingspGA;AACA;AAcA;AAWA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;AAGA;AAAA;;AAAA;AACA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAFA;;;;;AAKA;;;;;;;;;;;;;AAGA;AACA;;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAEA","sources":["webpack://wake-ui/./src/components/Slider/Slider.css","webpack://wake-ui/./src/components/Slider/Slider.css?956c","webpack://wake-ui/./src/components/Slider/Slider.stories.tsx","webpack://wake-ui/./src/components/Slider/Slider.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Общий контейнер */\n.slider-container {\n  width: 300px;\n  padding: 10px 0;\n  margin: 5px;\n}\n\n/* Лейбл над слайдером */\n.slider-label {\n   display: block;\n   margin-bottom: 1rem;\n   font-size: 0.9rem;\n   color: #333;\n   font-weight: 500;\n}\n\n/* Контейнер для самого слайдера */\n.slider {\n  position: relative;\n  height: 20px;\n  display: flex;\n  align-items: center;\n}\n\n/* Базовые стили для ползунка */\n.slider__thumb,\n.slider__thumb::-webkit-slider-thumb,\n.slider__thumb::-moz-range-thumb {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  position: absolute;\n  height: 16px;\n  width: 16px;\n  background-color: #007bff;\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  z-index: 3; /* Ползунок всегда сверху */\n  pointer-events: none;\n}\n\n/* Стили для input (дорожка скрыта) */\n.slider__thumb {\n  pointer-events: auto;\n  width: 100%;\n  height: 4px;\n  background: none;\n  outline: none;\n  /* Убираем z-index отсюда, т.к. только один input */\n}\n\n/* Webkit стили для ползунка */\n.slider__thumb::-webkit-slider-thumb {\n  pointer-events: auto;\n  position: relative;\n  margin-top: -6px;\n}\n\n/* Firefox стили для ползунка */\n.slider__thumb::-moz-range-thumb {\n  pointer-events: auto;\n  position: relative;\n}\n\n/* Контейнер для визуальных дорожек */\n.slider__track-container {\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  right: 8px;\n  height: 4px;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n}\n\n/* Основная серая дорожка */\n.slider__track {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #dee2e6;\n  border-radius: 3px;\n}\n\n/* Выделенный диапазон (от начала до ползунка) */\n.slider__range {\n  position: absolute;\n  height: 100%;\n  background-color: #007bff;\n  border-radius: 3px;\n  z-index: 2;\n}\n\n/* Деления на дорожке */\n.slider__tick {\n    position: absolute;\n    width: 1px;\n    height: 8px; /* Высота деления */\n    background-color: rgba(0, 0, 0, 0.2); /* Цвет деления */\n    top: 50%;\n    transform: translate(-50%, -50%); /* Центрируем деление */\n    z-index: 1; /* Под ползунком, над серой дорожкой */\n}\n\n\n/* Отображение текущего значения */\n.slider-value {\n  text-align: center; /* Центрируем значение */\n  margin-top: 8px;\n  font-size: 0.85rem;\n  color: #6c757d;\n}\n\n/* Стили для отключенного состояния */\n.slider--disabled {\n    opacity: 0.6;\n}\n.slider--disabled .slider__thumb,\n.slider--disabled .slider__thumb::-webkit-slider-thumb,\n.slider--disabled .slider__thumb::-moz-range-thumb {\n    cursor: not-allowed;\n    background-color: #adb5bd;\n}\n.slider--disabled .slider__range {\n    background-color: #adb5bd;\n}\n.slider--disabled .slider__tick {\n     background-color: rgba(0, 0, 0, 0.1);\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Slider/Slider.css\"],\"names\":[],\"mappings\":\"AAAA,oBAAoB;AACpB;EACE,YAAY;EACZ,eAAe;EACf,WAAW;AACb;;AAEA,wBAAwB;AACxB;GACG,cAAc;GACd,mBAAmB;GACnB,iBAAiB;GACjB,WAAW;GACX,gBAAgB;AACnB;;AAEA,kCAAkC;AAClC;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,mBAAmB;AACrB;;AAEA,+BAA+B;AAC/B;;;EAGE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,yBAAyB;EACzB,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,SAAS;EACT,UAAU;EACV,UAAU,EAAE,2BAA2B;EACvC,oBAAoB;AACtB;;AAEA,qCAAqC;AACrC;EACE,oBAAoB;EACpB,WAAW;EACX,WAAW;EACX,gBAAgB;EAChB,aAAa;EACb,mDAAmD;AACrD;;AAEA,8BAA8B;AAC9B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA,+BAA+B;AAC/B;EACE,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA,qCAAqC;AACrC;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,UAAU;EACV,WAAW;EACX,2BAA2B;EAC3B,oBAAoB;EACpB,UAAU;AACZ;;AAEA,2BAA2B;AAC3B;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA,gDAAgD;AAChD;EACE,kBAAkB;EAClB,YAAY;EACZ,yBAAyB;EACzB,kBAAkB;EAClB,UAAU;AACZ;;AAEA,uBAAuB;AACvB;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW,EAAE,mBAAmB;IAChC,oCAAoC,EAAE,iBAAiB;IACvD,QAAQ;IACR,gCAAgC,EAAE,uBAAuB;IACzD,UAAU,EAAE,sCAAsC;AACtD;;;AAGA,kCAAkC;AAClC;EACE,kBAAkB,EAAE,wBAAwB;EAC5C,eAAe;EACf,kBAAkB;EAClB,cAAc;AAChB;;AAEA,qCAAqC;AACrC;IACI,YAAY;AAChB;AACA;;;IAGI,mBAAmB;IACnB,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;KACK,oCAAoC;AACzC\",\"sourcesContent\":[\"/* Общий контейнер */\\n.slider-container {\\n  width: 300px;\\n  padding: 10px 0;\\n  margin: 5px;\\n}\\n\\n/* Лейбл над слайдером */\\n.slider-label {\\n   display: block;\\n   margin-bottom: 1rem;\\n   font-size: 0.9rem;\\n   color: #333;\\n   font-weight: 500;\\n}\\n\\n/* Контейнер для самого слайдера */\\n.slider {\\n  position: relative;\\n  height: 20px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n/* Базовые стили для ползунка */\\n.slider__thumb,\\n.slider__thumb::-webkit-slider-thumb,\\n.slider__thumb::-moz-range-thumb {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  position: absolute;\\n  height: 16px;\\n  width: 16px;\\n  background-color: #007bff;\\n  border-radius: 50%;\\n  border: none;\\n  cursor: pointer;\\n  margin: 0;\\n  padding: 0;\\n  z-index: 3; /* Ползунок всегда сверху */\\n  pointer-events: none;\\n}\\n\\n/* Стили для input (дорожка скрыта) */\\n.slider__thumb {\\n  pointer-events: auto;\\n  width: 100%;\\n  height: 4px;\\n  background: none;\\n  outline: none;\\n  /* Убираем z-index отсюда, т.к. только один input */\\n}\\n\\n/* Webkit стили для ползунка */\\n.slider__thumb::-webkit-slider-thumb {\\n  pointer-events: auto;\\n  position: relative;\\n  margin-top: -6px;\\n}\\n\\n/* Firefox стили для ползунка */\\n.slider__thumb::-moz-range-thumb {\\n  pointer-events: auto;\\n  position: relative;\\n}\\n\\n/* Контейнер для визуальных дорожек */\\n.slider__track-container {\\n  position: absolute;\\n  top: 50%;\\n  left: 8px;\\n  right: 8px;\\n  height: 4px;\\n  transform: translateY(-50%);\\n  pointer-events: none;\\n  z-index: 1;\\n}\\n\\n/* Основная серая дорожка */\\n.slider__track {\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  background-color: #dee2e6;\\n  border-radius: 3px;\\n}\\n\\n/* Выделенный диапазон (от начала до ползунка) */\\n.slider__range {\\n  position: absolute;\\n  height: 100%;\\n  background-color: #007bff;\\n  border-radius: 3px;\\n  z-index: 2;\\n}\\n\\n/* Деления на дорожке */\\n.slider__tick {\\n    position: absolute;\\n    width: 1px;\\n    height: 8px; /* Высота деления */\\n    background-color: rgba(0, 0, 0, 0.2); /* Цвет деления */\\n    top: 50%;\\n    transform: translate(-50%, -50%); /* Центрируем деление */\\n    z-index: 1; /* Под ползунком, над серой дорожкой */\\n}\\n\\n\\n/* Отображение текущего значения */\\n.slider-value {\\n  text-align: center; /* Центрируем значение */\\n  margin-top: 8px;\\n  font-size: 0.85rem;\\n  color: #6c757d;\\n}\\n\\n/* Стили для отключенного состояния */\\n.slider--disabled {\\n    opacity: 0.6;\\n}\\n.slider--disabled .slider__thumb,\\n.slider--disabled .slider__thumb::-webkit-slider-thumb,\\n.slider--disabled .slider__thumb::-moz-range-thumb {\\n    cursor: not-allowed;\\n    background-color: #adb5bd;\\n}\\n.slider--disabled .slider__range {\\n    background-color: #adb5bd;\\n}\\n.slider--disabled .slider__tick {\\n     background-color: rgba(0, 0, 0, 0.1);\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Slider.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Slider.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Slider.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport Slider from './Slider';\n\nconst meta: Meta<typeof Slider> = {\n  title: 'Components/Slider',\n  component: Slider,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    min: { control: 'number', description: 'Минимальное значение' },\n    max: { control: 'number', description: 'Максимальное значение' },\n    step: { control: 'number', description: 'Шаг изменения значения' },\n    value: { control: 'number', description: 'Текущее значение' },\n    onChange: { action: 'changed', description: 'Callback при изменении значения' },\n    disabled: { control: 'boolean', description: 'Отключает слайдер' },\n    label: { control: 'text', description: 'Лейбл над слайдером' },\n    showValue: { control: 'boolean', description: 'Показывать ли текущее значение' },\n  },\n  args: {\n    min: 0,\n    max: 100,\n    step: 1,\n    value: 50,\n    disabled: false,\n    label: 'Выберите значение',\n    showValue: true,\n  }\n};\n\nexport default meta;\n\n// --- Истории ---\n\nexport const Default: StoryObj<typeof Slider> = {\n  render: (args) => {\n    const [currentValue, setCurrentValue] = useState<number>(args.value);\n    return (\n      <Slider\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\nexport const WithSteps: StoryObj<typeof Slider> = {\n  args: {\n    min: 0,\n    max: 10,\n    step: 2,\n    value: 4,\n    label: 'Слайдер с шагом 2',\n    showValue: true,\n  },\n  render: (args) => {\n    const [currentValue, setCurrentValue] = useState<number>(args.value);\n    return (\n      <Slider\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\n\nexport const WithoutValue: StoryObj<typeof Slider> = {\n  args: {\n    ...Default.args,\n    label: 'Слайдер без значения',\n    showValue: false,\n  },\n  render: (args) => {\n    const [currentValue, setCurrentValue] = useState<number>(args.value);\n    return (\n      <Slider\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\n\nexport const Disabled: StoryObj<typeof Slider> = {\n    args: {\n        ...Default.args,\n        label: 'Отключенный слайдер',\n        value: 30,\n        disabled: true,\n    },\n     render: (args) => {\n        return <Slider {...args} />;\n    },\n}; ","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport './Slider.css'; // Импортируем Slider.css\n\ninterface SliderProps {\n  min: number;\n  max: number;\n  step?: number;\n  value: number; // Теперь просто число\n  onChange: (newValue: number) => void; // Принимает число\n  disabled?: boolean;\n  label?: string;\n  showValue?: boolean; // Переименовал showValues\n  className?: string;\n}\n\nconst Slider: React.FC<SliderProps> = ({\n  min,\n  max,\n  step = 1,\n  value,\n  onChange,\n  disabled = false,\n  label,\n  showValue = false, // Переименовал\n  className,\n}) => {\n  const [currentValue, setCurrentValue] = useState(value);\n  const inputRef = useRef<HTMLInputElement>(null); // Один ref\n  const rangeRef = useRef<HTMLDivElement>(null);\n\n  const getPercent = useCallback(\n    (val: number) => Math.round(((val - min) / (max - min)) * 100),\n    [min, max]\n  );\n\n  // Синхронизация с внешним value\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  // Обновление выделенного диапазона\n  useEffect(() => {\n    const percent = getPercent(currentValue);\n    if (rangeRef.current) {\n      rangeRef.current.style.left = `0%`; // Всегда от начала\n      rangeRef.current.style.width = `${percent}%`; // До текущего значения\n    }\n    // Обновляем позицию ползунка в CSS для лучшей синхронизации (необязательно, т.к. input сам двигается)\n    // if (inputRef.current) {\n    //   inputRef.current.style.setProperty('--thumb-percent', `${percent}%`);\n    // }\n  }, [currentValue, getPercent]);\n\n  // Вызов onChange при отпускании\n  const triggerOnChange = () => {\n     if (inputRef.current) {\n         onChange(+inputRef.current.value); // Передаем актуальное значение input\n     }\n  };\n\n  // Обновление внутреннего состояния при движении\n   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentValue(+event.target.value);\n     // Можно добавить проп для real-time onChange здесь, если нужно\n     // onChange(+event.target.value);\n  };\n\n\n  const containerClassName = [\n      'slider-container', // Обновляем классы\n      disabled ? 'slider--disabled' : '',\n      className,\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={containerClassName}>\n       {label && <label className=\"slider-label\">{label}</label>}\n      <div className=\"slider\"> {/* Обновляем классы */}\n        <input\n          type=\"range\"\n          ref={inputRef}\n          min={min}\n          max={max}\n          step={step}\n          value={currentValue}\n          onChange={handleInputChange}\n          onMouseUp={triggerOnChange}\n          onTouchEnd={triggerOnChange}\n          className=\"slider__thumb\" // Один ползунок\n          disabled={disabled}\n        />\n\n        <div className=\"slider__track-container\"> {/* Обновляем классы */}\n          <div className=\"slider__track\" />\n          <div ref={rangeRef} className=\"slider__range\" />\n          {/* Добавляем деления, если step задан */}\n           {step && (max - min) / step <= 20 && // Показываем деления, если их не слишком много\n              Array.from({ length: (max - min) / step + 1 }).map((_, i) => {\n                const tickValue = min + i * step;\n                const percent = getPercent(tickValue);\n                // Не показываем деления для min и max, т.к. они на краях\n                if (tickValue === min || tickValue === max) return null; \n                return (\n                  <div\n                    key={i}\n                    className=\"slider__tick\"\n                    style={{ left: `${percent}%` }}\n                  />\n                );\n            })}\n        </div>\n      </div>\n       {showValue && ( // Переименовал\n         <div className=\"slider-value\"> {/* Обновляем классы */}\n           <span>{currentValue}</span>\n         </div>\n       )}\n    </div>\n  );\n};\n\nexport default Slider; // Экспортируем Slider "],"names":[],"sourceRoot":""}