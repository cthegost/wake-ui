"use strict";
self["webpackHotUpdatewui"]("components-Button-Button-stories",{

/***/ "./src/components/Button/Button.stories.tsx":
/*!**************************************************!*\
  !*** ./src/components/Button/Button.stories.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AnotherText: () => (/* binding */ AnotherText),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   DisabledOutline: () => (/* binding */ DisabledOutline),
/* harmony export */   Filled: () => (/* binding */ Filled),
/* harmony export */   Outline: () => (/* binding */ Outline),
/* harmony export */   Text: () => (/* binding */ Text),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Button */ "./src/components/Button/Button.tsx");
 // Импортируем наш компонент
// Базовая мета-информация о компоненте для Storybook
const meta = {
  title: 'Components/Button',
  component: _Button__WEBPACK_IMPORTED_MODULE_0__["default"],
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/configure/story-layout
    layout: 'centered'
  },
  // Эта часть позволяет Storybook автоматически генерировать документацию для аргументов (props)
  tags: ['autodocs'],
  // Здесь мы можем описать аргументы компонента
  argTypes: {
    children: {
      control: 'text',
      description: 'Содержимое кнопки'
    },
    variant: {
      control: {
        type: 'select'
      },
      options: ['filled', 'outline', 'text'],
      description: 'Вариант внешнего вида кнопки'
    },
    disabled: {
      control: 'boolean',
      description: 'Отключает кнопку'
    },
    onClick: {
      action: 'clicked',
      description: 'Обработчик клика'
    },
    // Добавляем className, чтобы можно было передавать доп. классы через Storybook
    className: {
      control: 'text',
      description: 'Дополнительные CSS классы'
    }
  },
  // Устанавливаем значения по умолчанию для всех историй этого компонента
  args: {
    children: 'Button Text',
    disabled: false
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// История для варианта 'filled' (по умолчанию)
const Filled = {
  args: {
    variant: 'filled'
  }
};
// История для варианта 'outline'
const Outline = {
  args: {
    variant: 'outline'
  }
};
// История для варианта 'text'
const Text = {
  args: {
    variant: 'text'
  }
};
// История для отключенной кнопки (можно комбинировать с вариантами)
const Disabled = {
  args: {
    disabled: true,
    children: 'Disabled Button'
  }
};
// Пример отключенной outline кнопки
const DisabledOutline = {
  args: {
    variant: 'outline',
    disabled: true,
    children: 'Disabled Outline'
  }
};
// Можно добавить больше историй для разных состояний кнопки
// Например, кнопка с другим текстом:
const AnotherText = {
  args: {
    children: 'Другой текст'
  }
};
;
const __namedExportsOrder = ["Filled", "Outline", "Text", "Disabled", "DisabledOutline", "AnotherText"];
Filled.parameters = {
  ...Filled.parameters,
  docs: {
    ...Filled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'filled'\n  }\n}",
      ...Filled.parameters?.docs?.source
    }
  }
};
Outline.parameters = {
  ...Outline.parameters,
  docs: {
    ...Outline.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'outline'\n  }\n}",
      ...Outline.parameters?.docs?.source
    }
  }
};
Text.parameters = {
  ...Text.parameters,
  docs: {
    ...Text.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'text'\n  }\n}",
      ...Text.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    disabled: true,\n    children: 'Disabled Button'\n  }\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};
DisabledOutline.parameters = {
  ...DisabledOutline.parameters,
  docs: {
    ...DisabledOutline.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'outline',\n    disabled: true,\n    children: 'Disabled Outline'\n  }\n}",
      ...DisabledOutline.parameters?.docs?.source
    }
  }
};
AnotherText.parameters = {
  ...AnotherText.parameters,
  docs: {
    ...AnotherText.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    children: '\u0414\u0440\u0443\u0433\u043E\u0439 \u0442\u0435\u043A\u0441\u0442'\n  }\n}",
      ...AnotherText.parameters?.docs?.source
    }
  }
};

/***/ })

});
//# sourceMappingURL=components-Button-Button-stories.1bc393d7c14796a03e5d.hot-update.js.map