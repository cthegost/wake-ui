{"version":3,"file":"components-Popover-Popover-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AAUA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;;;;;;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AAAA;;;;;AACA;AAAA;AAAA;AAAA;;;;;AAAA;;;;;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AAcA;AAUA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://wake-ui/./src/components/Button/Button.css","webpack://wake-ui/./src/components/Popover/Popover.css","webpack://wake-ui/./src/components/Button/Button.css?d594","webpack://wake-ui/./src/components/Button/Button.tsx","webpack://wake-ui/./src/components/Popover/Popover.css?b3df","webpack://wake-ui/./src/components/Popover/Popover.stories.tsx","webpack://wake-ui/./src/components/Popover/Popover.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Базовые стили для всех кнопок */\nbutton {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out, opacity 0.2s ease-in-out;\n  font-family: sans-serif; /* Добавим шрифт для единообразия */\n  line-height: 1; /* Для лучшего выравнивания текста */\n  margin: 5px; /* Добавим небольшой отступ между кнопками в Storybook */\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n/* Стили для варианта 'filled' */\n.button--filled {\n  background-color: #007bff; /* Синий цвет */\n  color: white;\n}\n\n.button--filled:not(:disabled):hover {\n  background-color: #0056b3; /* Темнее при наведении */\n}\n\n/* Стили для варианта 'outline' */\n.button--outline {\n  background-color: transparent;\n  color: #007bff;\n  border: 1px solid #007bff;\n}\n\n.button--outline:not(:disabled):hover {\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\n}\n\n/* Стили для варианта 'text' */\n.button--text {\n  background-color: transparent;\n  color: #007bff;\n  border: none;\n}\n\n.button--text:not(:disabled):hover {\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\n}\n\n/* Стили для отключенных вариантов outline и text */\n.button--outline:disabled,\n.button--text:disabled {\n  color: #6c757d; /* Серый цвет для текста */\n  opacity: 0.65; /* Стандартная прозрачность для disabled */\n}\n.button--outline:disabled {\n    border-color: #6c757d; /* Серая граница для disabled outline */\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Button/Button.css\"],\"names\":[],\"mappings\":\"AAAA,kCAAkC;AAClC;EACE,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,8HAA8H;EAC9H,uBAAuB,EAAE,mCAAmC;EAC5D,cAAc,EAAE,oCAAoC;EACpD,WAAW,EAAE,wDAAwD;AACvE;;AAEA;EACE,mBAAmB;EACnB,YAAY;AACd;;AAEA,gCAAgC;AAChC;EACE,yBAAyB,EAAE,eAAe;EAC1C,YAAY;AACd;;AAEA;EACE,yBAAyB,EAAE,yBAAyB;AACtD;;AAEA,iCAAiC;AACjC;EACE,6BAA6B;EAC7B,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,wCAAwC,EAAE,6BAA6B;AACzE;;AAEA,8BAA8B;AAC9B;EACE,6BAA6B;EAC7B,cAAc;EACd,YAAY;AACd;;AAEA;EACE,wCAAwC,EAAE,6BAA6B;AACzE;;AAEA,mDAAmD;AACnD;;EAEE,cAAc,EAAE,0BAA0B;EAC1C,aAAa,EAAE,0CAA0C;AAC3D;AACA;IACI,qBAAqB,EAAE,uCAAuC;AAClE\",\"sourcesContent\":[\"/* Базовые стили для всех кнопок */\\nbutton {\\n  padding: 10px 15px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 1rem;\\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out, opacity 0.2s ease-in-out;\\n  font-family: sans-serif; /* Добавим шрифт для единообразия */\\n  line-height: 1; /* Для лучшего выравнивания текста */\\n  margin: 5px; /* Добавим небольшой отступ между кнопками в Storybook */\\n}\\n\\nbutton:disabled {\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n/* Стили для варианта 'filled' */\\n.button--filled {\\n  background-color: #007bff; /* Синий цвет */\\n  color: white;\\n}\\n\\n.button--filled:not(:disabled):hover {\\n  background-color: #0056b3; /* Темнее при наведении */\\n}\\n\\n/* Стили для варианта 'outline' */\\n.button--outline {\\n  background-color: transparent;\\n  color: #007bff;\\n  border: 1px solid #007bff;\\n}\\n\\n.button--outline:not(:disabled):hover {\\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\\n}\\n\\n/* Стили для варианта 'text' */\\n.button--text {\\n  background-color: transparent;\\n  color: #007bff;\\n  border: none;\\n}\\n\\n.button--text:not(:disabled):hover {\\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\\n}\\n\\n/* Стили для отключенных вариантов outline и text */\\n.button--outline:disabled,\\n.button--text:disabled {\\n  color: #6c757d; /* Серый цвет для текста */\\n  opacity: 0.65; /* Стандартная прозрачность для disabled */\\n}\\n.button--outline:disabled {\\n    border-color: #6c757d; /* Серая граница для disabled outline */\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Стили для блока поповера (визуал + анимация) */\n.popover-content {\n  background-color: white;\n  padding: 10px 15px; /* Возвращаем padding */\n  border-radius: 6px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  font-size: 0.9rem; /* Возвращаем стили контента */\n  color: #333;\n  z-index: 1010; /* z-index нужен здесь */\n  /* overflow: hidden; */ /* Можно убрать, если нет проблем */\n  transition-property: opacity, transform;\n  /* transition-duration: 150ms; */\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Popover/Popover.css\"],\"names\":[],\"mappings\":\"AAAA,iDAAiD;AACjD;EACE,uBAAuB;EACvB,kBAAkB,EAAE,uBAAuB;EAC3C,kBAAkB;EAClB,yCAAyC;EACzC,iBAAiB,EAAE,8BAA8B;EACjD,WAAW;EACX,aAAa,EAAE,wBAAwB;EACvC,sBAAsB,EAAE,mCAAmC;EAC3D,uCAAuC;EACvC,gCAAgC;AAClC\",\"sourcesContent\":[\"/* Стили для блока поповера (визуал + анимация) */\\n.popover-content {\\n  background-color: white;\\n  padding: 10px 15px; /* Возвращаем padding */\\n  border-radius: 6px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\\n  font-size: 0.9rem; /* Возвращаем стили контента */\\n  color: #333;\\n  z-index: 1010; /* z-index нужен здесь */\\n  /* overflow: hidden; */ /* Можно убрать, если нет проблем */\\n  transition-property: opacity, transform;\\n  /* transition-duration: 150ms; */\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport './Button.css'; // Импортируем стили\n\n// Определяем возможные варианты кнопки\ntype ButtonVariant = 'filled' | 'outline' | 'text';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n  variant?: ButtonVariant; // Добавляем необязательный проп variant\n}\n\nconst Button: React.FC<ButtonProps> = ({ \n  children, \n  variant = 'filled', // Устанавливаем 'filled' как значение по умолчанию\n  className, // Получаем className из пропсов\n  ...props \n}) => {\n  // Формируем классы в зависимости от варианта\n  // Пока это будут простые классы, позже мы добавим им стили\n  const variantClass = `button--${variant}`; \n  const combinedClassName = [variantClass, className].filter(Boolean).join(' '); // Объединяем классы\n\n  return (\n    <button className={combinedClassName} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button; ","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Popover.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Popover.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Popover.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport Popover from './Popover';\nimport Button from '../Button/Button'; // Используем нашу кнопку как триггер\n\nconst meta: Meta<typeof Popover> = {\n  title: 'Components/Popover',\n  component: Popover,\n  parameters: {\n    layout: 'centered', // Центрируем триггер\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    trigger: { control: false }, // Триггер задается в истории, не через Controls\n    children: { control: 'text' }, // Контент поповера можно менять\n    placement: {\n      control: { type: 'select' },\n      options: ['top', 'bottom', 'left', 'right'],\n      description: 'Позиция поповера относительно триггера',\n    },\n    offsetValue: {\n      control: { type: 'number' },\n      description: 'Отступ от триггера (в пикселях)',\n    },\n    transitionDuration: {\n        control: { type: 'number' },\n        description: 'Длительность анимации появления/исчезновения (в мс)',\n    }\n  },\n  args: { // Значения по умолчанию для всех историй\n    placement: 'bottom',\n    offsetValue: 10,\n    children: 'Это контент поповера!',\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Базовая история\nexport const Default: Story = {\n  args: {\n    // В качестве триггера передаем компонент Button\n    trigger: <Button>Нажми меня</Button>,\n  },\n};\n\n// История с другим положением\nexport const TopPlacement: Story = {\n  args: {\n    trigger: <Button variant=\"outline\">Popover сверху</Button>,\n    placement: 'top',\n    children: 'Я появляюсь сверху :)',\n  },\n};\n\n// История с другим контентом\nexport const CustomContent: Story = {\n  args: {\n    trigger: <Button variant=\"text\">Сложный контент</Button>,\n    placement: 'right',\n    children: (\n      <div>\n        <h4>Заголовок</h4>\n        <p>Какой-то текст и <a href=\"#\">ссылка</a>.</p>\n        <Button>Кнопка внутри</Button>\n      </div>\n    ),\n  },\n};\n\n// Пример с обычным текстом как триггером\nexport const TextTrigger: Story = {\n    args: {\n      trigger: <span style={{ borderBottom: '1px dashed blue', cursor: 'pointer' }}>Наведи или кликни</span>,\n      placement: 'bottom',\n      children: 'Поповер для простого текста.',\n    },\n}; ","import React, { useState, cloneElement } from 'react';\nimport {\n  useFloating,\n  useClick,\n  useDismiss,\n  useRole,\n  useInteractions,\n  useTransitionStyles,\n  FloatingFocusManager,\n  FloatingPortal, // Для рендера в портале (вне основного DOM-дерева)\n  offset,       // Для отступа от триггера\n  flip,         // Для автоматического переворота при нехватке места\n  shift,        // Для сдвига при нехватке места\n  autoUpdate,   // Для обновления позиции при скролле/ресайзе\n} from '@floating-ui/react';\nimport './Popover.css'; // Импортируем стили\n\ninterface PopoverProps {\n  trigger: React.ReactElement; // Элемент, который будет открывать поповер (например, кнопка)\n  children: React.ReactNode;   // Контент самого поповера\n  placement?: 'top' | 'bottom' | 'left' | 'right'; // Позиция (по умолчанию 'bottom')\n  offsetValue?: number; // Величина отступа (по умолчанию 10)\n  transitionDuration?: number; // Добавим проп для настройки длительности\n}\n\nconst Popover: React.FC<PopoverProps> = ({\n  trigger,\n  children,\n  placement = 'bottom',\n  offsetValue = 10,\n  transitionDuration = 150, // Значение по умолчанию 150мс\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { refs, floatingStyles, context } = useFloating({\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    middleware: [\n        offset(offsetValue), // Применяем отступ\n        flip(),             // Включаем переворот\n        shift({ padding: 5 }) // Включаем сдвиг с небольшим отступом от края\n    ],\n    placement: placement,   // Устанавливаем желаемое положение\n    whileElementsMounted: autoUpdate, // Автоматически обновляем позицию\n  });\n\n  // Настраиваем интерактивность: открытие по клику, закрытие по клику вне/Esc\n  const click = useClick(context);\n  const dismiss = useDismiss(context);\n  const role = useRole(context); // Для доступности (ARIA атрибуты)\n\n  // Настраиваем анимацию\n  const { isMounted, styles: transitionStyles } = useTransitionStyles(context, {\n    duration: transitionDuration,\n    initial: {\n      opacity: 0,\n      transform: 'translateY(10px)',\n    },\n  });\n\n  // Объединяем все взаимодействия\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    click,\n    dismiss,\n    role,\n  ]);\n\n  return (\n    <>\n      {/* Клонируем триггер */}\n      {/* @ts-ignore */}\n      {cloneElement(trigger, getReferenceProps({ ref: refs.setReference, ...trigger.props }))}\n\n      <FloatingPortal>\n        {isMounted && (\n          <FloatingFocusManager context={context} modal={false}>\n            {/* Внешний div ТОЛЬКО для позиционирования */}\n            <div\n              ref={refs.setFloating}\n              style={floatingStyles} // <--- Только стили позиционирования\n              {...getFloatingProps()} // Для обработчиков (например, dismiss)\n            >\n              {/* Внутренний div для ВИЗУАЛА и АНИМАЦИИ */}\n              <div\n                  className=\"popover-content\" // <--- Стили фона, тени, паддингов И transition здесь\n                  style={transitionStyles}    // <--- Стили анимации (opacity, transform) здесь\n              >\n                {children}\n              </div>\n            </div>\n          </FloatingFocusManager>\n        )}\n      </FloatingPortal>\n    </>\n  );\n};\n\nexport default Popover; "],"names":[],"sourceRoot":""}