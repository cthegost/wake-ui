{"version":3,"file":"components-PopUp-PopUp-stories.9576ae7893fd6719c468.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjhFA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;;AAEA;AAAA;AAAA;AAAA;;;;;;AAKA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;;;;;;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://wui/./src/components/Button/Button.css","webpack://wui/./src/components/PopUp/PopUp.css","webpack://wui/./src/components/Button/Button.css?d594","webpack://wui/./src/components/Button/Button.tsx","webpack://wui/./src/components/PopUp/PopUp.css?aa39","webpack://wui/./src/components/PopUp/PopUp.stories.tsx","webpack://wui/./src/components/PopUp/PopUp.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Базовые стили для всех кнопок */\nbutton {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out, opacity 0.2s ease-in-out;\n  font-family: sans-serif; /* Добавим шрифт для единообразия */\n  line-height: 1; /* Для лучшего выравнивания текста */\n  margin: 5px; /* Добавим небольшой отступ между кнопками в Storybook */\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n/* Стили для варианта 'filled' */\n.button--filled {\n  background-color: #007bff; /* Синий цвет */\n  color: white;\n}\n\n.button--filled:not(:disabled):hover {\n  background-color: #0056b3; /* Темнее при наведении */\n}\n\n/* Стили для варианта 'outline' */\n.button--outline {\n  background-color: transparent;\n  color: #007bff;\n  border: 1px solid #007bff;\n}\n\n.button--outline:not(:disabled):hover {\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\n}\n\n/* Стили для варианта 'text' */\n.button--text {\n  background-color: transparent;\n  color: #007bff;\n  border: none;\n}\n\n.button--text:not(:disabled):hover {\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\n}\n\n/* Стили для отключенных вариантов outline и text */\n.button--outline:disabled,\n.button--text:disabled {\n  color: #6c757d; /* Серый цвет для текста */\n  opacity: 0.65; /* Стандартная прозрачность для disabled */\n}\n.button--outline:disabled {\n    border-color: #6c757d; /* Серая граница для disabled outline */\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Button/Button.css\"],\"names\":[],\"mappings\":\"AAAA,kCAAkC;AAClC;EACE,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,8HAA8H;EAC9H,uBAAuB,EAAE,mCAAmC;EAC5D,cAAc,EAAE,oCAAoC;EACpD,WAAW,EAAE,wDAAwD;AACvE;;AAEA;EACE,mBAAmB;EACnB,YAAY;AACd;;AAEA,gCAAgC;AAChC;EACE,yBAAyB,EAAE,eAAe;EAC1C,YAAY;AACd;;AAEA;EACE,yBAAyB,EAAE,yBAAyB;AACtD;;AAEA,iCAAiC;AACjC;EACE,6BAA6B;EAC7B,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,wCAAwC,EAAE,6BAA6B;AACzE;;AAEA,8BAA8B;AAC9B;EACE,6BAA6B;EAC7B,cAAc;EACd,YAAY;AACd;;AAEA;EACE,wCAAwC,EAAE,6BAA6B;AACzE;;AAEA,mDAAmD;AACnD;;EAEE,cAAc,EAAE,0BAA0B;EAC1C,aAAa,EAAE,0CAA0C;AAC3D;AACA;IACI,qBAAqB,EAAE,uCAAuC;AAClE\",\"sourcesContent\":[\"/* Базовые стили для всех кнопок */\\nbutton {\\n  padding: 10px 15px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 1rem;\\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out, opacity 0.2s ease-in-out;\\n  font-family: sans-serif; /* Добавим шрифт для единообразия */\\n  line-height: 1; /* Для лучшего выравнивания текста */\\n  margin: 5px; /* Добавим небольшой отступ между кнопками в Storybook */\\n}\\n\\nbutton:disabled {\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n/* Стили для варианта 'filled' */\\n.button--filled {\\n  background-color: #007bff; /* Синий цвет */\\n  color: white;\\n}\\n\\n.button--filled:not(:disabled):hover {\\n  background-color: #0056b3; /* Темнее при наведении */\\n}\\n\\n/* Стили для варианта 'outline' */\\n.button--outline {\\n  background-color: transparent;\\n  color: #007bff;\\n  border: 1px solid #007bff;\\n}\\n\\n.button--outline:not(:disabled):hover {\\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\\n}\\n\\n/* Стили для варианта 'text' */\\n.button--text {\\n  background-color: transparent;\\n  color: #007bff;\\n  border: none;\\n}\\n\\n.button--text:not(:disabled):hover {\\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\\n}\\n\\n/* Стили для отключенных вариантов outline и text */\\n.button--outline:disabled,\\n.button--text:disabled {\\n  color: #6c757d; /* Серый цвет для текста */\\n  opacity: 0.65; /* Стандартная прозрачность для disabled */\\n}\\n.button--outline:disabled {\\n    border-color: #6c757d; /* Серая граница для disabled outline */\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Стили для оверлея (фона) */\n.popup-overlay {\n  position: fixed; /* Фиксированное позиционирование */\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5); /* Полупрозрачный черный фон */\n  display: flex;\n  align-items: center; /* Центрирование по вертикали */\n  justify-content: center; /* Центрирование по горизонтали */\n  z-index: 1000; /* Поверх других элементов */\n}\n\n/* Стили для контейнера контента попапа */\n.popup-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n  position: relative; /* Для позиционирования кнопки закрытия */\n  min-width: 300px; /* Минимальная ширина */\n  max-width: 80%; /* Максимальная ширина */\n}\n\n/* Стили для кнопки закрытия */\n.popup-close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  line-height: 1;\n  cursor: pointer;\n  color: #aaa;\n}\n\n.popup-close-button:hover {\n    color: #333;\n}\n\n/* Стили для заголовка */\n.popup-title {\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 1.25rem;\n  color: #333;\n}\n\n/* Стили для тела попапа (контента) */\n.popup-body {\n  margin-top: 10px;\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/PopUp/PopUp.css\"],\"names\":[],\"mappings\":\"AAAA,6BAA6B;AAC7B;EACE,eAAe,EAAE,mCAAmC;EACpD,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,oCAAoC,EAAE,8BAA8B;EACpE,aAAa;EACb,mBAAmB,EAAE,+BAA+B;EACpD,uBAAuB,EAAE,iCAAiC;EAC1D,aAAa,EAAE,4BAA4B;AAC7C;;AAEA,yCAAyC;AACzC;EACE,uBAAuB;EACvB,aAAa;EACb,kBAAkB;EAClB,yCAAyC;EACzC,kBAAkB,EAAE,yCAAyC;EAC7D,gBAAgB,EAAE,uBAAuB;EACzC,cAAc,EAAE,wBAAwB;AAC1C;;AAEA,8BAA8B;AAC9B;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,iBAAiB;EACjB,cAAc;EACd,eAAe;EACf,WAAW;AACb;;AAEA;IACI,WAAW;AACf;;AAEA,wBAAwB;AACxB;EACE,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,WAAW;AACb;;AAEA,qCAAqC;AACrC;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\"/* Стили для оверлея (фона) */\\n.popup-overlay {\\n  position: fixed; /* Фиксированное позиционирование */\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: rgba(0, 0, 0, 0.5); /* Полупрозрачный черный фон */\\n  display: flex;\\n  align-items: center; /* Центрирование по вертикали */\\n  justify-content: center; /* Центрирование по горизонтали */\\n  z-index: 1000; /* Поверх других элементов */\\n}\\n\\n/* Стили для контейнера контента попапа */\\n.popup-content {\\n  background-color: white;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\\n  position: relative; /* Для позиционирования кнопки закрытия */\\n  min-width: 300px; /* Минимальная ширина */\\n  max-width: 80%; /* Максимальная ширина */\\n}\\n\\n/* Стили для кнопки закрытия */\\n.popup-close-button {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  background: none;\\n  border: none;\\n  font-size: 1.5rem;\\n  line-height: 1;\\n  cursor: pointer;\\n  color: #aaa;\\n}\\n\\n.popup-close-button:hover {\\n    color: #333;\\n}\\n\\n/* Стили для заголовка */\\n.popup-title {\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n  font-size: 1.25rem;\\n  color: #333;\\n}\\n\\n/* Стили для тела попапа (контента) */\\n.popup-body {\\n  margin-top: 10px;\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport './Button.css'; // Импортируем стили\n\n// Определяем возможные варианты кнопки\ntype ButtonVariant = 'filled' | 'outline' | 'text';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n  variant?: ButtonVariant; // Добавляем необязательный проп variant\n}\n\nconst Button: React.FC<ButtonProps> = ({ \n  children, \n  variant = 'filled', // Устанавливаем 'filled' как значение по умолчанию\n  className, // Получаем className из пропсов\n  ...props \n}) => {\n  // Формируем классы в зависимости от варианта\n  // Пока это будут простые классы, позже мы добавим им стили\n  const variantClass = `button--${variant}`; \n  const combinedClassName = [variantClass, className].filter(Boolean).join(' '); // Объединяем классы\n\n  return (\n    <button className={combinedClassName} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button; ","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./PopUp.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./PopUp.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./PopUp.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport PopUp from './PopUp';\nimport Button from '../Button/Button'; // Импортируем кнопку для открытия попапа\n\nconst meta: Meta<typeof PopUp> = {\n  title: 'Components/PopUp',\n  component: PopUp,\n  parameters: {\n    layout: 'centered', // Центрируем кнопку, которая открывает попап\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    // isOpen и onClose управляются состоянием внутри истории, не через Controls\n    isOpen: { control: false },\n    onClose: { control: false },\n    children: { control: 'text' }, // Позволим менять текст внутри попапа\n    title: { control: 'text' }, // Позволим менять заголовок\n  },\n};\n\nexport default meta;\n\n// Типизация истории\ntype Story = StoryObj<typeof PopUp>;\n\n// Компонент-обертка для управления состоянием попапа\nconst PopUpWithState: React.FC<Omit<React.ComponentProps<typeof PopUp>, 'isOpen' | 'onClose'>> = (args) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleOpen = () => setIsOpen(true);\n  const handleClose = () => setIsOpen(false);\n\n  return (\n    <>\n      {/* Кнопка для открытия попапа */}\n      <Button onClick={handleOpen}>Открыть PopUp</Button>\n\n      {/* Сам PopUp */}\n      <PopUp {...args} isOpen={isOpen} onClose={handleClose} />\n    </>\n  );\n};\n\n\n// Базовая история\nexport const Default: Story = {\n  // Мы рендерим обертку, которая содержит логику открытия/закрытия\n  render: (args) => <PopUpWithState {...args} />,\n  args: {\n    // Аргументы по умолчанию для попапа\n    title: 'Заголовок PopUp',\n    children: 'Это содержимое модального окна PopUp. Вы можете закрыть его, нажав на крестик, клавишу Esc или кликнув вне окна.',\n  },\n};\n\n// История без заголовка\nexport const WithoutTitle: Story = {\n  render: (args) => <PopUpWithState {...args} />,\n  args: {\n    // title не указан\n    children: 'PopUp без заголовка.',\n  },\n};\n\n// История с другим контентом\nexport const CustomContent: Story = {\n  render: (args) => <PopUpWithState {...args} />,\n  args: {\n    title: 'Другой контент',\n    children: (\n      <div>\n        <h4>Вложенный заголовок</h4>\n        <p>Можно вставлять любой JSX.</p>\n        <Button variant=\"outline\" onClick={() => alert('Клик внутри попапа!')}>\n          Кнопка внутри\n        </Button>\n      </div>\n    ),\n  },\n}; ","import React, { useEffect } from 'react';\nimport './PopUp.css'; // Импортируем стили\n\ninterface PopUpProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  title?: string; // Необязательный заголовок\n}\n\nconst PopUp: React.FC<PopUpProps> = ({ isOpen, onClose, children, title }) => {\n  // Закрытие по клику на Esc\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n    }\n\n    // Очистка слушателя при размонтировании или закрытии\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [isOpen, onClose]);\n\n  // Не рендерим ничего, если попап закрыт\n  if (!isOpen) {\n    return null;\n  }\n\n  // Обертка для обработки клика вне контента\n  const handleOverlayClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    // Проверяем, что клик был именно по оверлею, а не по контенту внутри\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n      <div className=\"popup-content\">\n        {/* Кнопка закрытия */}\n        <button className=\"popup-close-button\" onClick={onClose}>\n          &times; {/* Символ крестика */}\n        </button>\n\n        {/* Заголовок (если есть) */}\n        {title && <h2 className=\"popup-title\">{title}</h2>}\n\n        {/* Контент попапа */}\n        <div className=\"popup-body\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PopUp; "],"names":[],"sourceRoot":""}