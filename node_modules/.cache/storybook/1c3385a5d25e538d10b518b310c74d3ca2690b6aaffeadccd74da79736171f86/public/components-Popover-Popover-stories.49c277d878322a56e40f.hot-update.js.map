{"version":3,"file":"components-Popover-Popover-stories.49c277d878322a56e40f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAcA;AAUA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAIA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://wui/./src/components/Popover/Popover.tsx"],"sourcesContent":["import React, { useState, cloneElement } from 'react';\nimport {\n  useFloating,\n  useClick,\n  useDismiss,\n  useRole,\n  useInteractions,\n  useTransitionStyles,\n  FloatingFocusManager,\n  FloatingPortal, // Для рендера в портале (вне основного DOM-дерева)\n  offset,       // Для отступа от триггера\n  flip,         // Для автоматического переворота при нехватке места\n  shift,        // Для сдвига при нехватке места\n  autoUpdate,   // Для обновления позиции при скролле/ресайзе\n} from '@floating-ui/react';\nimport './Popover.css'; // Импортируем стили\n\ninterface PopoverProps {\n  trigger: React.ReactElement; // Элемент, который будет открывать поповер (например, кнопка)\n  children: React.ReactNode;   // Контент самого поповера\n  placement?: 'top' | 'bottom' | 'left' | 'right'; // Позиция (по умолчанию 'bottom')\n  offsetValue?: number; // Величина отступа (по умолчанию 10)\n  transitionDuration?: number; // Добавим проп для настройки длительности\n}\n\nconst Popover: React.FC<PopoverProps> = ({\n  trigger,\n  children,\n  placement = 'bottom',\n  offsetValue = 10,\n  transitionDuration = 150, // Значение по умолчанию 150мс\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { refs, floatingStyles, context } = useFloating({\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    middleware: [\n        offset(offsetValue), // Применяем отступ\n        flip(),             // Включаем переворот\n        shift({ padding: 5 }) // Включаем сдвиг с небольшим отступом от края\n    ],\n    placement: placement,   // Устанавливаем желаемое положение\n    whileElementsMounted: autoUpdate, // Автоматически обновляем позицию\n  });\n\n  // Настраиваем интерактивность: открытие по клику, закрытие по клику вне/Esc\n  const click = useClick(context);\n  const dismiss = useDismiss(context);\n  const role = useRole(context); // Для доступности (ARIA атрибуты)\n\n  // Настраиваем анимацию\n  const { isMounted, styles: transitionStyles } = useTransitionStyles(context, {\n    duration: transitionDuration,\n    initial: {\n      opacity: 0,\n    },\n  });\n\n  // Объединяем все взаимодействия\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    click,\n    dismiss,\n    role,\n  ]);\n\n  return (\n    <>\n      {/* Клонируем триггер, добавляя ему нужные свойства для взаимодействия */}\n      {/* @ts-ignore // Временно игнорируем ошибку типизации со spread operator */}\n      {cloneElement(trigger, getReferenceProps({ ref: refs.setReference, ...trigger.props }))}\n\n      {/* Используем FloatingPortal для рендера поповера в корне документа */}  \n      <FloatingPortal>\n        {isMounted && (\n          // FloatingFocusManager управляет фокусом для доступности\n          <FloatingFocusManager context={context} modal={false}> \n            <div\n              className=\"popover-content\"\n              ref={refs.setFloating}\n              style={{\n                ...floatingStyles,  // Стили позиционирования от useFloating\n                ...transitionStyles, // Стили анимации от useTransitionStyles\n              }}\n              {...getFloatingProps()}\n            >\n              {children}\n            </div>\n          </FloatingFocusManager>\n        )}\n      </FloatingPortal>\n    </>\n  );\n};\n\nexport default Popover; "],"names":[],"sourceRoot":""}