{"version":3,"file":"components-Switch-Switch-stories.iframe.bundle.js","mappingspGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AAOA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;;;;;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;AAIA;AACA;AAAA;AACA;;;;;;;;;;;;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://wake-ui/./src/components/Switch/Switch.css","webpack://wake-ui/./src/components/Switch/Switch.css?0e5f","webpack://wake-ui/./src/components/Switch/Switch.stories.tsx","webpack://wake-ui/./src/components/Switch/Switch.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Контейнер для выравнивания переключателя и лейбла */\n.switch-container {\n  display: inline-flex; /* Чтобы контейнер занимал место по содержимому */\n  align-items: center;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle; /* Лучшее выравнивание в строке */\n  margin: 5px; /* Небольшой отступ для Storybook */\n}\n\n/* Скрытие оригинального чекбокса */\n.switch-input {\n  position: absolute;\n  opacity: 0;\n  pointer-events: none;\n  width: 0;\n  height: 0;\n}\n\n/* Визуальная обертка переключателя */\n.switch-label {\n  display: inline-block;\n  position: relative;\n  width: 40px;  /* Ширина переключателя */\n  height: 22px; /* Высота переключателя */\n  cursor: pointer;\n}\n\n/* Дорожка переключателя */\n.switch-track {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc; /* Цвет неактивной дорожки */\n  border-radius: 34px; /* Скругление */\n  transition: background-color 0.2s ease-in-out;\n}\n\n/* Ползунок переключателя */\n.switch-thumb {\n  display: block;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 18px;  /* Размер ползунка */\n  height: 18px; /* Должен быть меньше высоты дорожки */\n  background-color: white;\n  border-radius: 50%; /* Круглый ползунок */\n  transition: transform 0.2s ease-in-out;\n}\n\n/* Стили для состояния \"включено\" */\n.switch-input:checked + .switch-label .switch-track {\n  background-color: #007bff; /* Цвет активной дорожки */\n}\n\n.switch-input:checked + .switch-label .switch-thumb {\n  transform: translateX(18px); /* Сдвиг ползунка вправо */\n                               /* Значение сдвига = ширина дорожки - ширина ползунка - (2 * отступ слева) */\n                               /* 40px - 18px - (2 * 2px) = 18px */\n}\n\n/* Стили для состояния \"отключено\" (disabled) */\n.switch-container--disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.switch-container--disabled .switch-label {\n  cursor: not-allowed;\n}\n\n/* Стиль для текстового лейбла рядом */\n.switch-text-label {\n  margin-left: 8px; /* Отступ от переключателя */\n  cursor: pointer; /* Чтобы клик по тексту тоже работал */\n  font-size: 1rem;\n  color: #333;\n}\n\n.switch-container--disabled .switch-text-label {\n    cursor: not-allowed;\n}\n\n/* Состояние фокуса (для доступности) */\n/* Убираем стандартную обводку фокуса */\n/* \n.switch-input:focus + .switch-label .switch-track {\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n} \n*/ `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Switch/Switch.css\"],\"names\":[],\"mappings\":\"AAAA,sDAAsD;AACtD;EACE,oBAAoB,EAAE,iDAAiD;EACvE,mBAAmB;EACnB,eAAe;EACf,iBAAiB;EACjB,sBAAsB,EAAE,iCAAiC;EACzD,WAAW,EAAE,mCAAmC;AAClD;;AAEA,mCAAmC;AACnC;EACE,kBAAkB;EAClB,UAAU;EACV,oBAAoB;EACpB,QAAQ;EACR,SAAS;AACX;;AAEA,qCAAqC;AACrC;EACE,qBAAqB;EACrB,kBAAkB;EAClB,WAAW,GAAG,yBAAyB;EACvC,YAAY,EAAE,yBAAyB;EACvC,eAAe;AACjB;;AAEA,0BAA0B;AAC1B;EACE,cAAc;EACd,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,sBAAsB,EAAE,4BAA4B;EACpD,mBAAmB,EAAE,eAAe;EACpC,6CAA6C;AAC/C;;AAEA,2BAA2B;AAC3B;EACE,cAAc;EACd,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW,GAAG,oBAAoB;EAClC,YAAY,EAAE,sCAAsC;EACpD,uBAAuB;EACvB,kBAAkB,EAAE,qBAAqB;EACzC,sCAAsC;AACxC;;AAEA,mCAAmC;AACnC;EACE,yBAAyB,EAAE,0BAA0B;AACvD;;AAEA;EACE,2BAA2B,EAAE,0BAA0B;+BAC1B,4EAA4E;+BAC5E,mCAAmC;AAClE;;AAEA,+CAA+C;AAC/C;EACE,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,mBAAmB;AACrB;;AAEA,sCAAsC;AACtC;EACE,gBAAgB,EAAE,4BAA4B;EAC9C,eAAe,EAAE,sCAAsC;EACvD,eAAe;EACf,WAAW;AACb;;AAEA;IACI,mBAAmB;AACvB;;AAEA,uCAAuC;AACvC,uCAAuC;AACvC;;;;CAIC\",\"sourcesContent\":[\"/* Контейнер для выравнивания переключателя и лейбла */\\n.switch-container {\\n  display: inline-flex; /* Чтобы контейнер занимал место по содержимому */\\n  align-items: center;\\n  cursor: pointer;\\n  user-select: none;\\n  vertical-align: middle; /* Лучшее выравнивание в строке */\\n  margin: 5px; /* Небольшой отступ для Storybook */\\n}\\n\\n/* Скрытие оригинального чекбокса */\\n.switch-input {\\n  position: absolute;\\n  opacity: 0;\\n  pointer-events: none;\\n  width: 0;\\n  height: 0;\\n}\\n\\n/* Визуальная обертка переключателя */\\n.switch-label {\\n  display: inline-block;\\n  position: relative;\\n  width: 40px;  /* Ширина переключателя */\\n  height: 22px; /* Высота переключателя */\\n  cursor: pointer;\\n}\\n\\n/* Дорожка переключателя */\\n.switch-track {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc; /* Цвет неактивной дорожки */\\n  border-radius: 34px; /* Скругление */\\n  transition: background-color 0.2s ease-in-out;\\n}\\n\\n/* Ползунок переключателя */\\n.switch-thumb {\\n  display: block;\\n  position: absolute;\\n  top: 2px;\\n  left: 2px;\\n  width: 18px;  /* Размер ползунка */\\n  height: 18px; /* Должен быть меньше высоты дорожки */\\n  background-color: white;\\n  border-radius: 50%; /* Круглый ползунок */\\n  transition: transform 0.2s ease-in-out;\\n}\\n\\n/* Стили для состояния \\\"включено\\\" */\\n.switch-input:checked + .switch-label .switch-track {\\n  background-color: #007bff; /* Цвет активной дорожки */\\n}\\n\\n.switch-input:checked + .switch-label .switch-thumb {\\n  transform: translateX(18px); /* Сдвиг ползунка вправо */\\n                               /* Значение сдвига = ширина дорожки - ширина ползунка - (2 * отступ слева) */\\n                               /* 40px - 18px - (2 * 2px) = 18px */\\n}\\n\\n/* Стили для состояния \\\"отключено\\\" (disabled) */\\n.switch-container--disabled {\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n.switch-container--disabled .switch-label {\\n  cursor: not-allowed;\\n}\\n\\n/* Стиль для текстового лейбла рядом */\\n.switch-text-label {\\n  margin-left: 8px; /* Отступ от переключателя */\\n  cursor: pointer; /* Чтобы клик по тексту тоже работал */\\n  font-size: 1rem;\\n  color: #333;\\n}\\n\\n.switch-container--disabled .switch-text-label {\\n    cursor: not-allowed;\\n}\\n\\n/* Состояние фокуса (для доступности) */\\n/* Убираем стандартную обводку фокуса */\\n/* \\n.switch-input:focus + .switch-label .switch-track {\\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\\n} \\n*/ \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Switch.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Switch.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Switch.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport Switch from './Switch';\n\nconst meta: Meta<typeof Switch> = {\n  title: 'Components/Switch',\n  component: Switch,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    label: { control: 'text', description: 'Текст лейбла рядом с переключателем' },\n    checked: { control: 'boolean', description: 'Состояние переключателя (включен/выключен)' },\n    disabled: { control: 'boolean', description: 'Отключает переключатель' },\n    // onChange обычно управляется состоянием, не через Controls\n    // onChange: { action: 'changed', description: 'Событие изменения состояния' }\n  },\n  args: { // Значения по умолчанию\n    label: 'Переключить',\n    checked: false,\n    disabled: false,\n  }\n};\n\nexport default meta;\n\n// Базовая история с контролируемым состоянием\nexport const Default: StoryObj<typeof Switch> = {\n  render: (args) => {\n    const [isChecked, setIsChecked] = useState(args.checked || false);\n    return (\n      <Switch\n        {...args}\n        checked={isChecked}\n        onChange={(e) => setIsChecked(e.target.checked)}\n      />\n    );\n  },\n};\n\n// История для состояния \"включено\" по умолчанию\nexport const Checked: StoryObj<typeof Switch> = {\n  args: {\n    checked: true,\n    label: 'Уже включен',\n  },\n   render: (args) => {\n    const [isChecked, setIsChecked] = useState(args.checked || false);\n    return (\n      <Switch\n        {...args}\n        checked={isChecked}\n        onChange={(e) => setIsChecked(e.target.checked)}\n      />\n    );\n  },\n};\n\n\n// История без текстового лейбла\nexport const WithoutLabel: StoryObj<typeof Switch> = {\n  args: {\n    label: undefined, // Убираем текстовый лейбл\n  },\n  render: (args) => {\n    const [isChecked, setIsChecked] = useState(args.checked || false);\n    return (\n      <Switch\n        {...args}\n        checked={isChecked}\n        onChange={(e) => setIsChecked(e.target.checked)}\n      />\n    );\n  },\n};\n\n// История для отключенного состояния\nexport const Disabled: StoryObj<typeof Switch> = {\n    args: {\n        label: 'Отключен',\n        disabled: true,\n    },\n     render: (args) => {\n        // Можно управлять состоянием checked и для disabled\n        const [isChecked, setIsChecked] = useState(args.checked || false);\n         return (\n          <Switch\n            {...args}\n            checked={isChecked}\n            onChange={(e) => setIsChecked(e.target.checked)} // onChange все равно нужен для контроля\n          />\n        );\n    },\n};\n\n// Отключенный и включенный\nexport const DisabledChecked: StoryObj<typeof Switch> = {\n    args: {\n        label: 'Отключен (вкл)',\n        checked: true,\n        disabled: true,\n    },\n     render: (args) => {\n        const [isChecked, setIsChecked] = useState(args.checked || false);\n         return (\n          <Switch\n            {...args}\n            checked={isChecked}\n            onChange={(e) => setIsChecked(e.target.checked)}\n          />\n        );\n    },\n}; ","import React, { useId } from 'react';\nimport './Switch.css'; // Импортируем стили\n\n// Расширяем стандартные атрибуты input type=\"checkbox\"\ninterface SwitchProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  label?: string; // Необязательный лейбл\n}\n\nconst Switch: React.FC<SwitchProps> = ({\n  label,\n  className, // Пользовательские классы для внешнего контейнера\n  id: propId,\n  checked,\n  disabled,\n  ...props // Остальные атрибуты (value, name, onChange и т.д.)\n}) => {\n  const generatedId = useId();\n  const id = propId || generatedId;\n\n  const containerClassName = [\n    'switch-container',\n    disabled ? 'switch-container--disabled' : '',\n    className,\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={containerClassName}>\n      {/* Скрытый оригинальный чекбокс */}\n      <input\n        type=\"checkbox\"\n        id={id}\n        className=\"switch-input\"\n        checked={checked}\n        disabled={disabled}\n        role=\"switch\" // Улучшает доступность\n        aria-checked={checked}\n        {...props}\n      />\n      {/* Визуальное представление переключателя */}\n      <label htmlFor={id} className=\"switch-label\">\n        <span className=\"switch-track\">\n          <span className=\"switch-thumb\" />\n        </span>\n      </label>\n      {/* Лейбл рядом с переключателем (если есть) */}\n      {label && (\n        <label htmlFor={id} className=\"switch-text-label\">\n          {label}\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport default Switch; "],"names":[],"sourceRoot":""}