"use strict";
self["webpackHotUpdatewui"]("components-Input-Input-stories",{

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/Input/Input.css":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/Input/Input.css ***!
  \**********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/* Контейнер для инпута, лейбла и ошибки */
.input-container {
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem; /* Отступ снизу */
  width: 100%; /* По умолчанию занимает всю доступную ширину */
  max-width: 400px; /* Ограничим максимальную ширину для демонстрации */
  position: relative; /* Для позиционирования outline лейбла */
}

/* --- Стили для Standard Label (variant='standard') --- */

/* Стиль для стандартного лейбла (над полем) */
.input-label {
  margin-bottom: 0.3rem;
  font-size: 0.9rem;
  color: #333;
  font-weight: 500;
  transition: color 0.2s ease-in-out;
}

/* Затемнение стандартного лейбла при ошибке */
.input-container--error .input-label {
    color: #dc3545;
}

/* --- Стили для Outline Label (variant='outline') --- */

/* Убираем стандартный label для outline варианта */
.input-container--label-outline .input-label {
    display: none;
}

/* Стили для fieldset, который будет рамкой */
.input-fieldset {
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 0; /* Убираем стандартный padding */
  margin: 0; /* Убираем стандартный margin */
  transition: border-color 0.2s ease-in-out;
  position: relative; /* Для корректной работы legend */
}

/* Стили для legend, содержащего лейбл */
.input-legend {
  padding-left: 5px; /* Добавляем паддинги сюда */
  padding-right: 5px;
  margin-left: 8px; 
  font-size: 0.75rem; 
  color: #6c757d; 
  transition: color 0.2s ease-in-out, max-width 0.2s ease-in-out;
  max-width: 0.01px; 
  visibility: hidden; 
  white-space: nowrap;
  display: block; 
  background-color: white; /* Переносим фон сюда */
}

/* Анимация и показ legend при фокусе или наличии значения/плейсхолдера */
/* Используем :focus-within на fieldset и псевдокласс :not(:placeholder-shown) на input */
.input-fieldset:focus-within .input-legend,
.input-field:not(:placeholder-shown) + .input-legend, /* Для React нужно проверить, сработает ли с fieldset */
.input-container--label-outline .input-field:not(:placeholder-shown) ~ .input-legend /* Корректный селектор для нашей структуры */
{
  max-width: 100%;
  visibility: visible;
  color: #007bff; /* Цвет активного лейбла (при фокусе) */
}

/* Стили fieldset при фокусе */
.input-fieldset:focus-within {
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25); /* Тень имитируем на fieldset */
}

/* Стили fieldset при ошибке */
.input-container--error .input-fieldset {
  border-color: #dc3545;
}
/* Стили legend при ошибке и фокусе/значении */
.input-container--error .input-fieldset:focus-within .input-legend,
.input-container--error .input-field:not(:placeholder-shown) ~ .input-legend {
    color: #dc3545;
}

/* Стили fieldset при ошибке и фокусе */
.input-container--error .input-fieldset:focus-within {
  box-shadow: 0 0 0 2px rgba(220, 53, 69, 0.25);
}


/* --- Общие стили для Input Field --- */

.input-field {
  /* padding: 0.8rem 0.8rem 0.4rem; */ /* Убираем специфичный padding */
  padding: 0.6rem 0.8rem; /* Возвращаем стандартный padding */
  /* border: none; */ /* Убираем это */
  border: 1px solid #ccc; /* Возвращаем стандартную рамку */
  /* border-radius: 0; */ /* Убираем обнуление */
  border-radius: 4px; /* Возвращаем стандартное скругление */
  font-size: 1rem;
  color: #212529; /* <--- Явно задаем цвет текста */
  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  width: 100%;
  box-sizing: border-box;
  /* background: none; */ /* Оставляем фон по умолчанию для standard */
  outline: none; 
}

/* Убираем рамку и скругление и ставим спец. паддинг для input внутри fieldset (outline) */
.input-fieldset .input-field {
    border: none;
    border-radius: 0;
    background: none; 
    padding: 0.8rem 0.8rem 0.4rem; 
    color: #212529; /* <--- Явно задаем цвет текста здесь еще раз */
}

/* Стили при фокусе для standard варианта */
.input-field:focus {
  /* box-shadow: none; */ /* Убираем это, тень нужна для standard */
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

/* Убираем box-shadow с инпута при фокусе, только если он внутри fieldset */
.input-fieldset .input-field:focus {
    box-shadow: none;
}

/* Стили инпута при ошибке для standard */
.input-field--error {
   /* border-color убран, он на fieldset */
   border-color: #dc3545; /* Возвращаем рамку ошибки для standard */
}

/* Стили инпута при ошибке только внутри fieldset (убираем рамку) */
.input-fieldset .input-field--error {
    border-color: transparent; /* Или border: none; */
}

/* Убираем box-shadow с инпута при ошибке и фокусе */
.input-field--error:focus {
  /* box-shadow: none; */ /* Убираем это, тень нужна для standard */
   box-shadow: 0 0 0 2px rgba(220, 53, 69, 0.25);
}

/* Убираем box-shadow с инпута при ошибке и фокусе только внутри fieldset */
.input-fieldset .input-field--error:focus {
    box-shadow: none;
}

/* Стиль для сообщения об ошибке (без изменений) */
.input-error-message {
  margin-top: 0.3rem;
  font-size: 0.8rem;
  color: #dc3545;
} `, "",{"version":3,"sources":["webpack://./src/components/Input/Input.css"],"names":[],"mappings":"AAAA,0CAA0C;AAC1C;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB,EAAE,iBAAiB;EACtC,WAAW,EAAE,+CAA+C;EAC5D,gBAAgB,EAAE,mDAAmD;EACrE,kBAAkB,EAAE,wCAAwC;AAC9D;;AAEA,0DAA0D;;AAE1D,8CAA8C;AAC9C;EACE,qBAAqB;EACrB,iBAAiB;EACjB,WAAW;EACX,gBAAgB;EAChB,kCAAkC;AACpC;;AAEA,8CAA8C;AAC9C;IACI,cAAc;AAClB;;AAEA,wDAAwD;;AAExD,mDAAmD;AACnD;IACI,aAAa;AACjB;;AAEA,6CAA6C;AAC7C;EACE,sBAAsB;EACtB,kBAAkB;EAClB,UAAU,EAAE,gCAAgC;EAC5C,SAAS,EAAE,+BAA+B;EAC1C,yCAAyC;EACzC,kBAAkB,EAAE,iCAAiC;AACvD;;AAEA,wCAAwC;AACxC;EACE,iBAAiB,EAAE,4BAA4B;EAC/C,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,cAAc;EACd,8DAA8D;EAC9D,iBAAiB;EACjB,kBAAkB;EAClB,mBAAmB;EACnB,cAAc;EACd,uBAAuB,EAAE,uBAAuB;AAClD;;AAEA,yEAAyE;AACzE,yFAAyF;AACzF;;;;EAIE,eAAe;EACf,mBAAmB;EACnB,cAAc,EAAE,uCAAuC;AACzD;;AAEA,8BAA8B;AAC9B;EACE,qBAAqB;EACrB,6CAA6C,EAAE,+BAA+B;AAChF;;AAEA,8BAA8B;AAC9B;EACE,qBAAqB;AACvB;AACA,8CAA8C;AAC9C;;IAEI,cAAc;AAClB;;AAEA,uCAAuC;AACvC;EACE,6CAA6C;AAC/C;;;AAGA,wCAAwC;;AAExC;EACE,mCAAmC,EAAE,gCAAgC;EACrE,sBAAsB,EAAE,mCAAmC;EAC3D,kBAAkB,EAAE,gBAAgB;EACpC,sBAAsB,EAAE,iCAAiC;EACzD,sBAAsB,EAAE,sBAAsB;EAC9C,kBAAkB,EAAE,sCAAsC;EAC1D,eAAe;EACf,cAAc,EAAE,iCAAiC;EACjD,sEAAsE;EACtE,WAAW;EACX,sBAAsB;EACtB,sBAAsB,EAAE,4CAA4C;EACpE,aAAa;AACf;;AAEA,0FAA0F;AAC1F;IACI,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,6BAA6B;IAC7B,cAAc,EAAE,+CAA+C;AACnE;;AAEA,2CAA2C;AAC3C;EACE,sBAAsB,EAAE,yCAAyC;EACjE,aAAa;EACb,qBAAqB;EACrB,6CAA6C;AAC/C;;AAEA,2EAA2E;AAC3E;IACI,gBAAgB;AACpB;;AAEA,yCAAyC;AACzC;GACG,uCAAuC;GACvC,qBAAqB,EAAE,yCAAyC;AACnE;;AAEA,mEAAmE;AACnE;IACI,yBAAyB,EAAE,sBAAsB;AACrD;;AAEA,oDAAoD;AACpD;EACE,sBAAsB,EAAE,yCAAyC;GAChE,6CAA6C;AAChD;;AAEA,2EAA2E;AAC3E;IACI,gBAAgB;AACpB;;AAEA,kDAAkD;AAClD;EACE,kBAAkB;EAClB,iBAAiB;EACjB,cAAc;AAChB","sourcesContent":["/* Контейнер для инпута, лейбла и ошибки */\n.input-container {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem; /* Отступ снизу */\n  width: 100%; /* По умолчанию занимает всю доступную ширину */\n  max-width: 400px; /* Ограничим максимальную ширину для демонстрации */\n  position: relative; /* Для позиционирования outline лейбла */\n}\n\n/* --- Стили для Standard Label (variant='standard') --- */\n\n/* Стиль для стандартного лейбла (над полем) */\n.input-label {\n  margin-bottom: 0.3rem;\n  font-size: 0.9rem;\n  color: #333;\n  font-weight: 500;\n  transition: color 0.2s ease-in-out;\n}\n\n/* Затемнение стандартного лейбла при ошибке */\n.input-container--error .input-label {\n    color: #dc3545;\n}\n\n/* --- Стили для Outline Label (variant='outline') --- */\n\n/* Убираем стандартный label для outline варианта */\n.input-container--label-outline .input-label {\n    display: none;\n}\n\n/* Стили для fieldset, который будет рамкой */\n.input-fieldset {\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 0; /* Убираем стандартный padding */\n  margin: 0; /* Убираем стандартный margin */\n  transition: border-color 0.2s ease-in-out;\n  position: relative; /* Для корректной работы legend */\n}\n\n/* Стили для legend, содержащего лейбл */\n.input-legend {\n  padding-left: 5px; /* Добавляем паддинги сюда */\n  padding-right: 5px;\n  margin-left: 8px; \n  font-size: 0.75rem; \n  color: #6c757d; \n  transition: color 0.2s ease-in-out, max-width 0.2s ease-in-out;\n  max-width: 0.01px; \n  visibility: hidden; \n  white-space: nowrap;\n  display: block; \n  background-color: white; /* Переносим фон сюда */\n}\n\n/* Анимация и показ legend при фокусе или наличии значения/плейсхолдера */\n/* Используем :focus-within на fieldset и псевдокласс :not(:placeholder-shown) на input */\n.input-fieldset:focus-within .input-legend,\n.input-field:not(:placeholder-shown) + .input-legend, /* Для React нужно проверить, сработает ли с fieldset */\n.input-container--label-outline .input-field:not(:placeholder-shown) ~ .input-legend /* Корректный селектор для нашей структуры */\n{\n  max-width: 100%;\n  visibility: visible;\n  color: #007bff; /* Цвет активного лейбла (при фокусе) */\n}\n\n/* Стили fieldset при фокусе */\n.input-fieldset:focus-within {\n  border-color: #007bff;\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25); /* Тень имитируем на fieldset */\n}\n\n/* Стили fieldset при ошибке */\n.input-container--error .input-fieldset {\n  border-color: #dc3545;\n}\n/* Стили legend при ошибке и фокусе/значении */\n.input-container--error .input-fieldset:focus-within .input-legend,\n.input-container--error .input-field:not(:placeholder-shown) ~ .input-legend {\n    color: #dc3545;\n}\n\n/* Стили fieldset при ошибке и фокусе */\n.input-container--error .input-fieldset:focus-within {\n  box-shadow: 0 0 0 2px rgba(220, 53, 69, 0.25);\n}\n\n\n/* --- Общие стили для Input Field --- */\n\n.input-field {\n  /* padding: 0.8rem 0.8rem 0.4rem; */ /* Убираем специфичный padding */\n  padding: 0.6rem 0.8rem; /* Возвращаем стандартный padding */\n  /* border: none; */ /* Убираем это */\n  border: 1px solid #ccc; /* Возвращаем стандартную рамку */\n  /* border-radius: 0; */ /* Убираем обнуление */\n  border-radius: 4px; /* Возвращаем стандартное скругление */\n  font-size: 1rem;\n  color: #212529; /* <--- Явно задаем цвет текста */\n  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  width: 100%;\n  box-sizing: border-box;\n  /* background: none; */ /* Оставляем фон по умолчанию для standard */\n  outline: none; \n}\n\n/* Убираем рамку и скругление и ставим спец. паддинг для input внутри fieldset (outline) */\n.input-fieldset .input-field {\n    border: none;\n    border-radius: 0;\n    background: none; \n    padding: 0.8rem 0.8rem 0.4rem; \n    color: #212529; /* <--- Явно задаем цвет текста здесь еще раз */\n}\n\n/* Стили при фокусе для standard варианта */\n.input-field:focus {\n  /* box-shadow: none; */ /* Убираем это, тень нужна для standard */\n  outline: none;\n  border-color: #007bff;\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n}\n\n/* Убираем box-shadow с инпута при фокусе, только если он внутри fieldset */\n.input-fieldset .input-field:focus {\n    box-shadow: none;\n}\n\n/* Стили инпута при ошибке для standard */\n.input-field--error {\n   /* border-color убран, он на fieldset */\n   border-color: #dc3545; /* Возвращаем рамку ошибки для standard */\n}\n\n/* Стили инпута при ошибке только внутри fieldset (убираем рамку) */\n.input-fieldset .input-field--error {\n    border-color: transparent; /* Или border: none; */\n}\n\n/* Убираем box-shadow с инпута при ошибке и фокусе */\n.input-field--error:focus {\n  /* box-shadow: none; */ /* Убираем это, тень нужна для standard */\n   box-shadow: 0 0 0 2px rgba(220, 53, 69, 0.25);\n}\n\n/* Убираем box-shadow с инпута при ошибке и фокусе только внутри fieldset */\n.input-fieldset .input-field--error:focus {\n    box-shadow: none;\n}\n\n/* Стиль для сообщения об ошибке (без изменений) */\n.input-error-message {\n  margin-top: 0.3rem;\n  font-size: 0.8rem;\n  color: #dc3545;\n} "],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ })

});
//# sourceMappingURL=components-Input-Input-stories.bc36180aa2325c7aa1af.hot-update.js.map