{"version":3,"file":"components-Button-Button-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AAUA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;;;;;;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://wake-ui/./src/components/Button/Button.css","webpack://wake-ui/./src/components/Button/Button.css?d594","webpack://wake-ui/./src/components/Button/Button.stories.tsx","webpack://wake-ui/./src/components/Button/Button.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Базовые стили для всех кнопок */\nbutton {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out, opacity 0.2s ease-in-out;\n  font-family: sans-serif; /* Добавим шрифт для единообразия */\n  line-height: 1; /* Для лучшего выравнивания текста */\n  margin: 5px; /* Добавим небольшой отступ между кнопками в Storybook */\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n/* Стили для варианта 'filled' */\n.button--filled {\n  background-color: #007bff; /* Синий цвет */\n  color: white;\n}\n\n.button--filled:not(:disabled):hover {\n  background-color: #0056b3; /* Темнее при наведении */\n}\n\n/* Стили для варианта 'outline' */\n.button--outline {\n  background-color: transparent;\n  color: #007bff;\n  border: 1px solid #007bff;\n}\n\n.button--outline:not(:disabled):hover {\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\n}\n\n/* Стили для варианта 'text' */\n.button--text {\n  background-color: transparent;\n  color: #007bff;\n  border: none;\n}\n\n.button--text:not(:disabled):hover {\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\n}\n\n/* Стили для отключенных вариантов outline и text */\n.button--outline:disabled,\n.button--text:disabled {\n  color: #6c757d; /* Серый цвет для текста */\n  opacity: 0.65; /* Стандартная прозрачность для disabled */\n}\n.button--outline:disabled {\n    border-color: #6c757d; /* Серая граница для disabled outline */\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Button/Button.css\"],\"names\":[],\"mappings\":\"AAAA,kCAAkC;AAClC;EACE,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,8HAA8H;EAC9H,uBAAuB,EAAE,mCAAmC;EAC5D,cAAc,EAAE,oCAAoC;EACpD,WAAW,EAAE,wDAAwD;AACvE;;AAEA;EACE,mBAAmB;EACnB,YAAY;AACd;;AAEA,gCAAgC;AAChC;EACE,yBAAyB,EAAE,eAAe;EAC1C,YAAY;AACd;;AAEA;EACE,yBAAyB,EAAE,yBAAyB;AACtD;;AAEA,iCAAiC;AACjC;EACE,6BAA6B;EAC7B,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,wCAAwC,EAAE,6BAA6B;AACzE;;AAEA,8BAA8B;AAC9B;EACE,6BAA6B;EAC7B,cAAc;EACd,YAAY;AACd;;AAEA;EACE,wCAAwC,EAAE,6BAA6B;AACzE;;AAEA,mDAAmD;AACnD;;EAEE,cAAc,EAAE,0BAA0B;EAC1C,aAAa,EAAE,0CAA0C;AAC3D;AACA;IACI,qBAAqB,EAAE,uCAAuC;AAClE\",\"sourcesContent\":[\"/* Базовые стили для всех кнопок */\\nbutton {\\n  padding: 10px 15px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 1rem;\\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out, opacity 0.2s ease-in-out;\\n  font-family: sans-serif; /* Добавим шрифт для единообразия */\\n  line-height: 1; /* Для лучшего выравнивания текста */\\n  margin: 5px; /* Добавим небольшой отступ между кнопками в Storybook */\\n}\\n\\nbutton:disabled {\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n/* Стили для варианта 'filled' */\\n.button--filled {\\n  background-color: #007bff; /* Синий цвет */\\n  color: white;\\n}\\n\\n.button--filled:not(:disabled):hover {\\n  background-color: #0056b3; /* Темнее при наведении */\\n}\\n\\n/* Стили для варианта 'outline' */\\n.button--outline {\\n  background-color: transparent;\\n  color: #007bff;\\n  border: 1px solid #007bff;\\n}\\n\\n.button--outline:not(:disabled):hover {\\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\\n}\\n\\n/* Стили для варианта 'text' */\\n.button--text {\\n  background-color: transparent;\\n  color: #007bff;\\n  border: none;\\n}\\n\\n.button--text:not(:disabled):hover {\\n  background-color: rgba(0, 123, 255, 0.1); /* Легкий фон при наведении */\\n}\\n\\n/* Стили для отключенных вариантов outline и text */\\n.button--outline:disabled,\\n.button--text:disabled {\\n  color: #6c757d; /* Серый цвет для текста */\\n  opacity: 0.65; /* Стандартная прозрачность для disabled */\\n}\\n.button--outline:disabled {\\n    border-color: #6c757d; /* Серая граница для disabled outline */\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import type { Meta, StoryObj } from '@storybook/react';\nimport Button from './Button'; // Импортируем наш компонент\n\n// Базовая мета-информация о компоненте для Storybook\nconst meta: Meta<typeof Button> = {\n  title: 'Components/Button', // Название компонента/группы в интерфейсе Storybook\n  component: Button,         // Сам компонент\n  parameters: {\n    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/configure/story-layout\n    layout: 'centered',\n  },\n  // Эта часть позволяет Storybook автоматически генерировать документацию для аргументов (props)\n  tags: ['autodocs'],\n  // Здесь мы можем описать аргументы компонента\n  argTypes: {\n    children: { control: 'text', description: 'Содержимое кнопки' },\n    variant: {\n      control: { type: 'select' }, // Используем select для выбора варианта\n      options: ['filled', 'outline', 'text'], // Доступные опции\n      description: 'Вариант внешнего вида кнопки',\n    },\n    disabled: { control: 'boolean', description: 'Отключает кнопку' },\n    onClick: { action: 'clicked', description: 'Обработчик клика' },\n    // Добавляем className, чтобы можно было передавать доп. классы через Storybook\n    className: { control: 'text', description: 'Дополнительные CSS классы' },\n  },\n  // Устанавливаем значения по умолчанию для всех историй этого компонента\n  args: { \n    children: 'Button Text',\n    disabled: false,\n  }\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// История для варианта 'filled' (по умолчанию)\nexport const Filled: Story = {\n  args: {\n    variant: 'filled',\n  },\n};\n\n// История для варианта 'outline'\nexport const Outline: Story = {\n  args: {\n    variant: 'outline',\n  },\n};\n\n// История для варианта 'text'\nexport const Text: Story = {\n  args: {\n    variant: 'text',\n  },\n};\n\n// История для отключенной кнопки (можно комбинировать с вариантами)\nexport const Disabled: Story = {\n  args: {\n    disabled: true,\n    children: 'Disabled Button'\n  },\n};\n\n// Пример отключенной outline кнопки\nexport const DisabledOutline: Story = {\n    args: {\n        variant: 'outline',\n        disabled: true,\n        children: 'Disabled Outline'\n    },\n};\n\n// Можно добавить больше историй для разных состояний кнопки\n// Например, кнопка с другим текстом:\nexport const AnotherText: Story = {\n    args: {\n        children: 'Другой текст',\n    },\n}; ","import React from 'react';\nimport './Button.css'; // Импортируем стили\n\n// Определяем возможные варианты кнопки\ntype ButtonVariant = 'filled' | 'outline' | 'text';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n  variant?: ButtonVariant; // Добавляем необязательный проп variant\n}\n\nconst Button: React.FC<ButtonProps> = ({ \n  children, \n  variant = 'filled', // Устанавливаем 'filled' как значение по умолчанию\n  className, // Получаем className из пропсов\n  ...props \n}) => {\n  // Формируем классы в зависимости от варианта\n  // Пока это будут простые классы, позже мы добавим им стили\n  const variantClass = `button--${variant}`; \n  const combinedClassName = [variantClass, className].filter(Boolean).join(' '); // Объединяем классы\n\n  return (\n    <button className={combinedClassName} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button; "],"names":[],"sourceRoot":""}