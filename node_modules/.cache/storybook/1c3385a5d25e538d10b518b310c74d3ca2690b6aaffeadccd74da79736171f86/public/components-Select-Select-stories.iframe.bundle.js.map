{"version":3,"file":"components-Select-Select-stories.iframe.bundle.js","mappingsvGA;AACA;AAcA;AAoBA;AASA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAEA;AACA;AAAA;AACA;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AAAA;AAAA;;;;;;;AApsources":["webpack://wake-ui/./src/components/Select/Select.css","webpack://wake-ui/./src/components/Select/Select.css?6ef9","webpack://wake-ui/./src/components/Select/Select.stories.tsx","webpack://wake-ui/./src/components/Select/Select.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Контейнер селекта */\n.select-container {\n  position: relative;\n  display: inline-block; /* Или block, если нужно на всю ширину */\n  width: 200px; /* Пример ширины */\n  margin: 5px;\n}\n\n/* Лейбл над селектом */\n.select-label {\n  display: block;\n  margin-bottom: 0.3rem;\n  font-size: 0.9rem;\n  color: #333;\n  font-weight: 500;\n}\n\n/* Кнопка селекта */\n.select-button {\n  display: flex;\n  align-items: center;\n  justify-content: space-between; /* Размещаем значение слева, стрелку справа */\n  width: 100%;\n  padding: 0.6rem 0.8rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  cursor: pointer;\n  text-align: left;\n  box-sizing: border-box;\n}\n\n.select-button:focus {\n  border-color: #80bdff;\n  outline: 0;\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n}\n\n/* Отображаемое значение или плейсхолдер */\n.select-value {\n  overflow: hidden;\n  word-break: break-word;\n}\n.select-placeholder {\n  color: #6c757d; /* Серый цвет плейсхолдера */\n}\n\n/* Стрелка */\n.select-arrow {\n  margin-left: 8px;\n  color: #6c757d;\n  transition: transform 0.2s ease-in-out;\n}\n/* Поворот стрелки при открытом списке */\n.select-button[aria-expanded=\"true\"] .select-arrow {\n    transform: rotate(180deg);\n}\n\n\n/* Выпадающий список */\n.select-listbox {\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n  padding: 0.5rem 0;\n  max-height: 200px; /* Ограничение высоты с прокруткой */\n  overflow-y: auto;\n  z-index: 1050; /* Должен быть выше другого контента */\n  box-sizing: border-box;\n}\n\n/* Опция в списке */\n.select-option {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  white-space: normal;\n  overflow: hidden;\n  color: #212529;\n  background-color: transparent;\n  border: 0;\n  transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;\n}\n\n/* Активная опция (при навигации клавиатурой) */\n.select-option--active {\n  color: #fff;\n  background-color: #007bff;\n}\n.select-option--active .select-option-checkmark {\n    color: #fff; /* Белая галочка на синем фоне */\n}\n\n\n/* Выбранная опция */\n.select-option--selected {\n  font-weight: 600;\n  /* background-color: #e9ecef; /* Можно добавить легкий фон */\n}\n\n/* Галочка для выбранной опции */\n.select-option-checkmark {\n    margin-left: 10px;\n    color: #007bff; /* Цвет галочки */\n}\n\n/* Отключенная опция */\n.select-option--disabled {\n  color: #6c757d;\n  cursor: not-allowed;\n  background-color: transparent;\n}\n.select-option--disabled:hover,\n.select-option--disabled.select-option--active {\n    color: #6c757d;\n    background-color: transparent; /* Убираем подсветку при наведении/активности */\n}\n\n\n/* Отключенный селект */\n.select-container--disabled .select-button {\n  background-color: #e9ecef;\n  opacity: 0.65;\n  cursor: not-allowed;\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Select/Select.css\"],\"names\":[],\"mappings\":\"AAAA,sBAAsB;AACtB;EACE,kBAAkB;EAClB,qBAAqB,EAAE,wCAAwC;EAC/D,YAAY,EAAE,kBAAkB;EAChC,WAAW;AACb;;AAEA,uBAAuB;AACvB;EACE,cAAc;EACd,qBAAqB;EACrB,iBAAiB;EACjB,WAAW;EACX,gBAAgB;AAClB;;AAEA,mBAAmB;AACnB;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B,EAAE,6CAA6C;EAC7E,WAAW;EACX,sBAAsB;EACtB,eAAe;EACf,gBAAgB;EAChB,cAAc;EACd,sBAAsB;EACtB,4BAA4B;EAC5B,yBAAyB;EACzB,kBAAkB;EAClB,wEAAwE;EACxE,eAAe;EACf,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;EACrB,UAAU;EACV,6CAA6C;AAC/C;;AAEA,0CAA0C;AAC1C;EACE,gBAAgB;EAChB,sBAAsB;AACxB;AACA;EACE,cAAc,EAAE,4BAA4B;AAC9C;;AAEA,YAAY;AACZ;EACE,gBAAgB;EAChB,cAAc;EACd,sCAAsC;AACxC;AACA,wCAAwC;AACxC;IACI,yBAAyB;AAC7B;;;AAGA,sBAAsB;AACtB;EACE,sBAAsB;EACtB,qCAAqC;EACrC,kBAAkB;EAClB,6CAA6C;EAC7C,iBAAiB;EACjB,iBAAiB,EAAE,oCAAoC;EACvD,gBAAgB;EAChB,aAAa,EAAE,sCAAsC;EACrD,sBAAsB;AACxB;;AAEA,mBAAmB;AACnB;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,oBAAoB;EACpB,eAAe;EACf,mBAAmB;EACnB,gBAAgB;EAChB,cAAc;EACd,6BAA6B;EAC7B,SAAS;EACT,uEAAuE;AACzE;;AAEA,+CAA+C;AAC/C;EACE,WAAW;EACX,yBAAyB;AAC3B;AACA;IACI,WAAW,EAAE,gCAAgC;AACjD;;;AAGA,oBAAoB;AACpB;EACE,gBAAgB;EAChB,4DAA4D;AAC9D;;AAEA,gCAAgC;AAChC;IACI,iBAAiB;IACjB,cAAc,EAAE,iBAAiB;AACrC;;AAEA,sBAAsB;AACtB;EACE,cAAc;EACd,mBAAmB;EACnB,6BAA6B;AAC/B;AACA;;IAEI,cAAc;IACd,6BAA6B,EAAE,+CAA+C;AAClF;;;AAGA,uBAAuB;AACvB;EACE,yBAAyB;EACzB,aAAa;EACb,mBAAmB;AACrB\",\"sourcesContent\":[\"/* Контейнер селекта */\\n.select-container {\\n  position: relative;\\n  display: inline-block; /* Или block, если нужно на всю ширину */\\n  width: 200px; /* Пример ширины */\\n  margin: 5px;\\n}\\n\\n/* Лейбл над селектом */\\n.select-label {\\n  display: block;\\n  margin-bottom: 0.3rem;\\n  font-size: 0.9rem;\\n  color: #333;\\n  font-weight: 500;\\n}\\n\\n/* Кнопка селекта */\\n.select-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between; /* Размещаем значение слева, стрелку справа */\\n  width: 100%;\\n  padding: 0.6rem 0.8rem;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  color: #212529;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: 4px;\\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  cursor: pointer;\\n  text-align: left;\\n  box-sizing: border-box;\\n}\\n\\n.select-button:focus {\\n  border-color: #80bdff;\\n  outline: 0;\\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\\n}\\n\\n/* Отображаемое значение или плейсхолдер */\\n.select-value {\\n  overflow: hidden;\\n  word-break: break-word;\\n}\\n.select-placeholder {\\n  color: #6c757d; /* Серый цвет плейсхолдера */\\n}\\n\\n/* Стрелка */\\n.select-arrow {\\n  margin-left: 8px;\\n  color: #6c757d;\\n  transition: transform 0.2s ease-in-out;\\n}\\n/* Поворот стрелки при открытом списке */\\n.select-button[aria-expanded=\\\"true\\\"] .select-arrow {\\n    transform: rotate(180deg);\\n}\\n\\n\\n/* Выпадающий список */\\n.select-listbox {\\n  background-color: #fff;\\n  border: 1px solid rgba(0, 0, 0, 0.15);\\n  border-radius: 4px;\\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\\n  padding: 0.5rem 0;\\n  max-height: 200px; /* Ограничение высоты с прокруткой */\\n  overflow-y: auto;\\n  z-index: 1050; /* Должен быть выше другого контента */\\n  box-sizing: border-box;\\n}\\n\\n/* Опция в списке */\\n.select-option {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 0.5rem 1rem;\\n  cursor: pointer;\\n  white-space: normal;\\n  overflow: hidden;\\n  color: #212529;\\n  background-color: transparent;\\n  border: 0;\\n  transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;\\n}\\n\\n/* Активная опция (при навигации клавиатурой) */\\n.select-option--active {\\n  color: #fff;\\n  background-color: #007bff;\\n}\\n.select-option--active .select-option-checkmark {\\n    color: #fff; /* Белая галочка на синем фоне */\\n}\\n\\n\\n/* Выбранная опция */\\n.select-option--selected {\\n  font-weight: 600;\\n  /* background-color: #e9ecef; /* Можно добавить легкий фон */\\n}\\n\\n/* Галочка для выбранной опции */\\n.select-option-checkmark {\\n    margin-left: 10px;\\n    color: #007bff; /* Цвет галочки */\\n}\\n\\n/* Отключенная опция */\\n.select-option--disabled {\\n  color: #6c757d;\\n  cursor: not-allowed;\\n  background-color: transparent;\\n}\\n.select-option--disabled:hover,\\n.select-option--disabled.select-option--active {\\n    color: #6c757d;\\n    background-color: transparent; /* Убираем подсветку при наведении/активности */\\n}\\n\\n\\n/* Отключенный селект */\\n.select-container--disabled .select-button {\\n  background-color: #e9ecef;\\n  opacity: 0.65;\\n  cursor: not-allowed;\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Select.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Select.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Select.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport Select, { SelectOption } from './Select'; // Импортируем тип опции\n\nconst meta: Meta<typeof Select> = {\n  title: 'Components/Select',\n  component: Select,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    options: { control: 'object', description: 'Массив опций [{value, label, disabled?}]' },\n    value: { control: 'text', description: 'Выбранное значение (value опции)' },\n    onChange: { action: 'changed', description: 'Callback при изменении значения' },\n    placeholder: { control: 'text', description: 'Текст, когда ничего не выбрано' },\n    label: { control: 'text', description: 'Лейбл над селектом' },\n    disabled: { control: 'boolean', description: 'Отключает селект' },\n  },\n};\n\nexport default meta;\n\n// Пример опций\nconst defaultOptions: SelectOption[] = [\n  { value: 'option1', label: 'Опция 1' },\n  { value: 'option2', label: 'Опция 2 (длинный текст, чтобы проверить переполнение)' },\n  { value: 'option3', label: 'Опция 3' },\n  { value: 'option4', label: 'Опция 4 (отключена)', disabled: true },\n  { value: 5, label: 'Опция 5 (числовое значение)' },\n];\n\n\n// Базовая история с контролируемым состоянием\nexport const Default: StoryObj<typeof Select> = {\n  args: {\n    options: defaultOptions,\n    placeholder: 'Выберите фрукт',\n    label: 'Фрукты',\n  },\n  render: (args) => {\n    const [currentValue, setCurrentValue] = useState<string | number | null>(null); // Начальное значение null\n    return (\n      <Select\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\n// История с предвыбранным значением\nexport const WithValue: StoryObj<typeof Select> = {\n  args: {\n    options: defaultOptions,\n    label: 'Фрукты',\n    value: 'option2', // Предвыбрана Опция 2\n  },\n   render: (args) => {\n    const [currentValue, setCurrentValue] = useState<string | number | null>(args.value);\n    return (\n      <Select\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\n// История без лейбла и плейсхолдера\nexport const Minimal: StoryObj<typeof Select> = {\n  args: {\n    options: defaultOptions.slice(0, 2), // Только первые две опции\n    label: undefined,\n    placeholder: undefined,\n  },\n   render: (args) => {\n    const [currentValue, setCurrentValue] = useState<string | number | null>(defaultOptions[0].value); // Выберем первую опцию\n    return (\n      <Select\n        {...args}\n        value={currentValue}\n        onChange={(newValue) => setCurrentValue(newValue)}\n      />\n    );\n  },\n};\n\n\n// История с отключенным состоянием\nexport const Disabled: StoryObj<typeof Select> = {\n    args: {\n        options: defaultOptions,\n        label: 'Отключенный селект',\n        value: 'option1',\n        disabled: true,\n    },\n     render: (args) => {\n        // Для disabled можно не использовать state, если не нужно менять значение\n        return <Select {...args} />;\n    },\n}; ","import React, { useState, useId, useMemo } from 'react';\nimport {\n  useFloating,\n  useClick,\n  useDismiss,\n  useRole,\n  useListNavigation, // Для навигации по списку клавиатурой\n  useInteractions,\n  FloatingFocusManager,\n  FloatingPortal,\n  flip,\n  offset, // <--- Импортируем offset\n  size as floatingSize, // Переименовываем, чтобы не конфликтовать с AvatarProps\n  autoUpdate,\n} from '@floating-ui/react';\nimport './Select.css'; // Импортируем стили\n\n// Тип для опций селекта\nexport interface SelectOption {\n  value: string | number;\n  label: string;\n  disabled?: boolean; // Опционально: отключенная опция\n}\n\ninterface SelectProps {\n  options: SelectOption[];\n  value: string | number | null; // Текущее выбранное значение\n  onChange: (value: string | number | null) => void; // Функция обратного вызова при выборе\n  placeholder?: string;\n  label?: string;         // Лейбл над селектом\n  disabled?: boolean;\n  className?: string;     // Пользовательский класс для контейнера\n  // Добавить error?\n}\n\nconst Select: React.FC<SelectProps> = ({\n  options,\n  value,\n  onChange,\n  placeholder = 'Выберите...',\n  label,\n  disabled = false,\n  className,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState<number | null>(null); // Индекс активного элемента для навигации\n\n  const listRef = React.useRef<Array<HTMLElement | null>>([]); // Ref'ы для элементов списка\n\n  const generatedId = useId();\n  const labelId = label ? `${generatedId}-label` : undefined;\n  const listboxId = `${generatedId}-listbox`;\n\n  const { refs, floatingStyles, context } = useFloating({\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    whileElementsMounted: autoUpdate,\n    placement: 'bottom-start', // Позиционируем снизу от начала\n    middleware: [\n      offset(4), // <--- Добавляем отступ (например, 4px)\n      flip({ padding: 5 }),\n      floatingSize({ // Подгоняем ширину списка под ширину кнопки\n        apply({ rects, elements }) {\n          Object.assign(elements.floating.style, {\n            width: `${rects.reference.width}px`,\n          });\n        },\n        padding: 5,\n      }),\n    ],\n  });\n\n  // --- Взаимодействия ---\n  const click = useClick(context);\n  const dismiss = useDismiss(context);\n  const role = useRole(context, { role: 'listbox' });\n  // Навигация по списку (стрелки, Enter, Esc)\n  const listNavigation = useListNavigation(context, {\n    listRef,\n    activeIndex,\n    onNavigate: setActiveIndex,\n    virtual: true, // Т.к. рендерим не все опции сразу (хотя в нашем случае рендерим все)\n    loop: true,\n  });\n\n  const { getReferenceProps, getFloatingProps, getItemProps } = useInteractions([\n    click,\n    dismiss,\n    role,\n    listNavigation,\n  ]);\n\n  // Находим лейбл выбранного значения\n  const selectedLabel = useMemo(() => {\n    return options.find(option => option.value === value)?.label;\n  }, [options, value]);\n\n  // Обработчик выбора опции\n  const handleSelect = (optionValue: string | number | null) => {\n    if (optionValue !== null) {\n        onChange(optionValue);\n        setIsOpen(false);\n    }\n  };\n\n  const containerClassName = [\n    'select-container',\n    disabled ? 'select-container--disabled' : '',\n    className,\n  ].filter(Boolean).join(' ');\n\n\n  return (\n    <div className={containerClassName}>\n       {/* Лейбл над селектом */}\n       {label && (\n        <label id={labelId} className=\"select-label\">\n          {label}\n        </label>\n      )}\n      {/* Кнопка, открывающая список */}\n      <button\n        ref={refs.setReference}\n        className=\"select-button\"\n        disabled={disabled}\n        aria-labelledby={labelId}\n        aria-haspopup=\"listbox\"\n        aria-expanded={isOpen}\n        aria-autocomplete=\"none\"\n        {...getReferenceProps()}\n      >\n        <span className=\"select-value\">\n            {selectedLabel || <span className=\"select-placeholder\">{placeholder}</span>}\n        </span>\n        <span className=\"select-arrow\" aria-hidden=\"true\">\n          {/* Простая SVG стрелка вниз */}\n          <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" width=\"12\" height=\"12\"><path d=\"M8 11L3 6h10z\"/></svg>\n        </span>\n      </button>\n\n      {/* Список опций */}\n      <FloatingPortal>\n        {isOpen && (\n          <FloatingFocusManager context={context} modal={false}>\n            <div\n              ref={refs.setFloating}\n              style={floatingStyles}\n              className=\"select-listbox\"\n              role=\"listbox\"\n              id={listboxId}\n              aria-labelledby={labelId}\n              {...getFloatingProps()}\n            >\n              {options.map((option, index) => (\n                <div\n                  key={option.value}\n                  ref={(node) => { listRef.current[index] = node; }}\n                  role=\"option\"\n                  className={`select-option ${activeIndex === index ? 'select-option--active' : ''} ${option.value === value ? 'select-option--selected' : ''} ${option.disabled ? 'select-option--disabled' : ''}`}\n                  tabIndex={activeIndex === index ? 0 : -1}\n                  aria-selected={activeIndex === index && isOpen || option.value === value}\n                  aria-disabled={option.disabled}\n                  {...getItemProps({\n                    // Обработка клика или Enter на опции\n                    onClick: () => !option.disabled && handleSelect(option.value),\n                    onKeyDown: (event) => {\n                        if (event.key === 'Enter' || event.key === ' ') {\n                           if (!option.disabled) handleSelect(option.value);\n                        }\n                    },\n                  })}\n                >\n                  {option.label}\n                   {/* Можно добавить галочку для выбранной опции */}\n                   {option.value === value && (\n                       <span className=\"select-option-checkmark\" aria-hidden=\"true\">✓</span>\n                   )}\n                </div>\n              ))}\n            </div>\n          </FloatingFocusManager>\n        )}\n      </FloatingPortal>\n    </div>\n  );\n};\n\nexport default Select; "],"names":[],"sourceRoot":""}