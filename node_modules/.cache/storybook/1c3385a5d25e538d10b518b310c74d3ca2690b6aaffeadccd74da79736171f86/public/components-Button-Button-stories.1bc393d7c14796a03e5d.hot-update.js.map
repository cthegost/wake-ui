{"version":3,"file":"components-Button-Button-stories.1bc393d7c14796a03e5d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wui/./src/components/Button/Button.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport Button from './Button'; // Импортируем наш компонент\n\n// Базовая мета-информация о компоненте для Storybook\nconst meta: Meta<typeof Button> = {\n  title: 'Components/Button', // Название компонента/группы в интерфейсе Storybook\n  component: Button,         // Сам компонент\n  parameters: {\n    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/configure/story-layout\n    layout: 'centered',\n  },\n  // Эта часть позволяет Storybook автоматически генерировать документацию для аргументов (props)\n  tags: ['autodocs'],\n  // Здесь мы можем описать аргументы компонента\n  argTypes: {\n    children: { control: 'text', description: 'Содержимое кнопки' },\n    variant: {\n      control: { type: 'select' }, // Используем select для выбора варианта\n      options: ['filled', 'outline', 'text'], // Доступные опции\n      description: 'Вариант внешнего вида кнопки',\n    },\n    disabled: { control: 'boolean', description: 'Отключает кнопку' },\n    onClick: { action: 'clicked', description: 'Обработчик клика' },\n    // Добавляем className, чтобы можно было передавать доп. классы через Storybook\n    className: { control: 'text', description: 'Дополнительные CSS классы' },\n  },\n  // Устанавливаем значения по умолчанию для всех историй этого компонента\n  args: { \n    children: 'Button Text',\n    disabled: false,\n  }\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// История для варианта 'filled' (по умолчанию)\nexport const Filled: Story = {\n  args: {\n    variant: 'filled',\n  },\n};\n\n// История для варианта 'outline'\nexport const Outline: Story = {\n  args: {\n    variant: 'outline',\n  },\n};\n\n// История для варианта 'text'\nexport const Text: Story = {\n  args: {\n    variant: 'text',\n  },\n};\n\n// История для отключенной кнопки (можно комбинировать с вариантами)\nexport const Disabled: Story = {\n  args: {\n    disabled: true,\n    children: 'Disabled Button'\n  },\n};\n\n// Пример отключенной outline кнопки\nexport const DisabledOutline: Story = {\n    args: {\n        variant: 'outline',\n        disabled: true,\n        children: 'Disabled Outline'\n    },\n};\n\n// Можно добавить больше историй для разных состояний кнопки\n// Например, кнопка с другим текстом:\nexport const AnotherText: Story = {\n    args: {\n        children: 'Другой текст',\n    },\n}; "],"names":[],"sourceRoot":""}