"use strict";
self["webpackHotUpdatewui"]("components-Button-Button-stories",{

/***/ "./src/components/Button/Button.tsx":
/*!******************************************!*\
  !*** ./src/components/Button/Button.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);


const Button = ({ children, variant = 'filled', className, ...props })=>{
    // Формируем классы в зависимости от варианта
    // Пока это будут простые классы, позже мы добавим им стили
    const variantClass = `button--${variant}`;
    const combinedClassName = [
        variantClass,
        className
    ].filter(Boolean).join(' '); // Объединяем классы
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("button", {
        className: combinedClassName,
        ...props,
        children: children
    }, void 0, false, {
        fileName: "/Users/antonhavkin/Desktop/Проекты/Бизнес проекты/WUI/src/components/Button/Button.tsx",
        lineNumber: 23,
        columnNumber: 5
    }, undefined);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
Button.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "Button",
    "props": {
        "children": {
            "required": true,
            "tsType": {
                "name": "ReactReactNode",
                "raw": "React.ReactNode"
            },
            "description": ""
        },
        "variant": {
            "required": false,
            "tsType": {
                "name": "union",
                "raw": "'filled' | 'outline' | 'text'",
                "elements": [
                    {
                        "name": "literal",
                        "value": "'filled'"
                    },
                    {
                        "name": "literal",
                        "value": "'outline'"
                    },
                    {
                        "name": "literal",
                        "value": "'text'"
                    }
                ]
            },
            "description": "",
            "defaultValue": {
                "value": "'filled'",
                "computed": false
            }
        }
    }
};


/***/ })

});
//# sourceMappingURL=components-Button-Button-stories.50d58aa60412b6356a78.hot-update.js.map